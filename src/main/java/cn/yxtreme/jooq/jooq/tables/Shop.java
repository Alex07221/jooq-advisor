/*
 * This file is generated by jOOQ.
 */
package cn.yxtreme.jooq.jooq.tables;


import cn.yxtreme.jooq.jooq.Public;
import cn.yxtreme.jooq.jooq.tables.records.ShopRecord;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Shop extends TableImpl<ShopRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.shop</code>
     */
    public static final Shop SHOP = new Shop();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ShopRecord> getRecordType() {
        return ShopRecord.class;
    }

    /**
     * The column <code>public.shop.id</code>. 主键id
     */
    public final TableField<ShopRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "主键id");

    /**
     * The column <code>public.shop.order_id</code>. 订单id
     */
    public final TableField<ShopRecord, Long> ORDER_ID = createField(DSL.name("order_id"), SQLDataType.BIGINT, this, "订单id");

    /**
     * The column <code>public.shop.total_dosage</code>. 数量
     */
    public final TableField<ShopRecord, Long> TOTAL_DOSAGE = createField(DSL.name("total_dosage"), SQLDataType.BIGINT, this, "数量");

    /**
     * The column <code>public.shop.dosage</code>. 单次用药剂量
     */
    public final TableField<ShopRecord, String> DOSAGE = createField(DSL.name("dosage"), SQLDataType.VARCHAR, this, "单次用药剂量");

    /**
     * The column <code>public.shop.dosage_unit</code>. 单次用药剂量单位
     */
    public final TableField<ShopRecord, String> DOSAGE_UNIT = createField(DSL.name("dosage_unit"), SQLDataType.VARCHAR, this, "单次用药剂量单位");

    /**
     * The column <code>public.shop.medicine_freq</code>. 用药评率
     */
    public final TableField<ShopRecord, String> MEDICINE_FREQ = createField(DSL.name("medicine_freq"), SQLDataType.VARCHAR, this, "用药评率");

    /**
     * The column <code>public.shop.comments</code>. 嘱托
     */
    public final TableField<ShopRecord, String> COMMENTS = createField(DSL.name("comments"), SQLDataType.VARCHAR, this, "嘱托");

    /**
     * The column <code>public.shop.total_charge</code>. 服药天数
     */
    public final TableField<ShopRecord, Long> TOTAL_CHARGE = createField(DSL.name("total_charge"), SQLDataType.BIGINT, this, "服药天数");

    /**
     * The column <code>public.shop.prescription</code>. 是否处方药
     */
    public final TableField<ShopRecord, Boolean> PRESCRIPTION = createField(DSL.name("prescription"), SQLDataType.BOOLEAN, this, "是否处方药");

    /**
     * The column <code>public.shop.name</code>. 商品名
     */
    public final TableField<ShopRecord, String> NAME = createField(DSL.name("name"), SQLDataType.VARCHAR, this, "商品名");

    /**
     * The column <code>public.shop.spec</code>. 规格
     */
    public final TableField<ShopRecord, String> SPEC = createField(DSL.name("spec"), SQLDataType.VARCHAR, this, "规格");

    /**
     * The column <code>public.shop.brand_name</code>. 品牌
     */
    public final TableField<ShopRecord, String> BRAND_NAME = createField(DSL.name("brand_name"), SQLDataType.VARCHAR, this, "品牌");

    /**
     * The column <code>public.shop.usage</code>. 用法
     */
    public final TableField<ShopRecord, String> USAGE = createField(DSL.name("usage"), SQLDataType.VARCHAR, this, "用法");

    /**
     * The column <code>public.shop.price</code>. 价格 单位分
     */
    public final TableField<ShopRecord, Long> PRICE = createField(DSL.name("price"), SQLDataType.BIGINT, this, "价格 单位分");

    /**
     * The column <code>public.shop.created_time</code>.
     */
    public final TableField<ShopRecord, LocalDateTime> CREATED_TIME = createField(DSL.name("created_time"), SQLDataType.LOCALDATETIME(6).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>public.shop.updated_time</code>. current_timestamp
     */
    public final TableField<ShopRecord, LocalDateTime> UPDATED_TIME = createField(DSL.name("updated_time"), SQLDataType.LOCALDATETIME(6).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "current_timestamp");

    /**
     * The column <code>public.shop.arrangement_id</code>. 药单表id
     */
    public final TableField<ShopRecord, Long> ARRANGEMENT_ID = createField(DSL.name("arrangement_id"), SQLDataType.BIGINT, this, "药单表id");

    /**
     * The column <code>public.shop.sku_id</code>. 叮当skuId
     */
    public final TableField<ShopRecord, Long> SKU_ID = createField(DSL.name("sku_id"), SQLDataType.BIGINT, this, "叮当skuId");

    /**
     * The column <code>public.shop.big_img_url</code>. 大图地址url多个 以｜分割
     */
    public final TableField<ShopRecord, String> BIG_IMG_URL = createField(DSL.name("big_img_url"), SQLDataType.CLOB, this, "大图地址url多个 以｜分割");

    /**
     * The column <code>public.shop.small_img_url</code>. 小图地址url
     */
    public final TableField<ShopRecord, String> SMALL_IMG_URL = createField(DSL.name("small_img_url"), SQLDataType.CLOB, this, "小图地址url");

    /**
     * The column <code>public.shop.mid_img_url</code>. 中图 图片url地址
     */
    public final TableField<ShopRecord, String> MID_IMG_URL = createField(DSL.name("mid_img_url"), SQLDataType.CLOB, this, "中图 图片url地址");

    /**
     * The column <code>public.shop.total_dosage_unit</code>.
     */
    public final TableField<ShopRecord, String> TOTAL_DOSAGE_UNIT = createField(DSL.name("total_dosage_unit"), SQLDataType.VARCHAR.nullable(false).defaultValue(DSL.field("''::character varying", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.shop.original_price</code>. 原价
     */
    public final TableField<ShopRecord, Long> ORIGINAL_PRICE = createField(DSL.name("original_price"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.field("0", SQLDataType.BIGINT)), this, "原价");

    private Shop(Name alias, Table<ShopRecord> aliased) {
        this(alias, aliased, null);
    }

    private Shop(Name alias, Table<ShopRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.shop</code> table reference
     */
    public Shop(String alias) {
        this(DSL.name(alias), SHOP);
    }

    /**
     * Create an aliased <code>public.shop</code> table reference
     */
    public Shop(Name alias) {
        this(alias, SHOP);
    }

    /**
     * Create a <code>public.shop</code> table reference
     */
    public Shop() {
        this(DSL.name("shop"), null);
    }

    public <O extends Record> Shop(Table<O> child, ForeignKey<O, ShopRecord> key) {
        super(child, key, SHOP);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public Identity<ShopRecord, Long> getIdentity() {
        return (Identity<ShopRecord, Long>) super.getIdentity();
    }

    @Override
    public Shop as(String alias) {
        return new Shop(DSL.name(alias), this);
    }

    @Override
    public Shop as(Name alias) {
        return new Shop(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Shop rename(String name) {
        return new Shop(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Shop rename(Name name) {
        return new Shop(name, null);
    }
}
