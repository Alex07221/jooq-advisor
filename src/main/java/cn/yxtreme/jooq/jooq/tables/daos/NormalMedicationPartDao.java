/*
 * This file is generated by jOOQ.
 */
package cn.yxtreme.jooq.jooq.tables.daos;


import cn.yxtreme.jooq.jooq.tables.NormalMedicationPart;
import cn.yxtreme.jooq.jooq.tables.pojos.NormalMedicationPartPO;
import cn.yxtreme.jooq.jooq.tables.records.NormalMedicationPartRecord;

import java.math.BigDecimal;
import java.util.Collection;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * 标准方组成表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NormalMedicationPartDao extends DAOImpl<NormalMedicationPartRecord, NormalMedicationPartPO, Long> {

    /**
     * Create a new NormalMedicationPartDao without any configuration
     */
    public NormalMedicationPartDao() {
        super(NormalMedicationPart.NORMAL_MEDICATION_PART, NormalMedicationPartPO.class);
    }

    /**
     * Create a new NormalMedicationPartDao with an attached configuration
     */
    public NormalMedicationPartDao(Configuration configuration) {
        super(NormalMedicationPart.NORMAL_MEDICATION_PART, NormalMedicationPartPO.class, configuration);
    }

    @Override
    public Long getId(NormalMedicationPartPO object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<NormalMedicationPartPO> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(NormalMedicationPart.NORMAL_MEDICATION_PART.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<NormalMedicationPartPO> fetchById(Long... values) {
        return fetch(NormalMedicationPart.NORMAL_MEDICATION_PART.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public NormalMedicationPartPO fetchOneById(Long value) {
        return fetchOne(NormalMedicationPart.NORMAL_MEDICATION_PART.ID, value);
    }

    /**
     * Fetch records that have <code>weight BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<NormalMedicationPartPO> fetchRangeOfWeight(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(NormalMedicationPart.NORMAL_MEDICATION_PART.WEIGHT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>weight IN (values)</code>
     */
    public List<NormalMedicationPartPO> fetchByWeight(BigDecimal... values) {
        return fetch(NormalMedicationPart.NORMAL_MEDICATION_PART.WEIGHT, values);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<NormalMedicationPartPO> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(NormalMedicationPart.NORMAL_MEDICATION_PART.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<NormalMedicationPartPO> fetchByName(String... values) {
        return fetch(NormalMedicationPart.NORMAL_MEDICATION_PART.NAME, values);
    }

    /**
     * Fetch records that have <code>sku_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<NormalMedicationPartPO> fetchRangeOfSkuId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(NormalMedicationPart.NORMAL_MEDICATION_PART.SKU_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>sku_id IN (values)</code>
     */
    public List<NormalMedicationPartPO> fetchBySkuId(Long... values) {
        return fetch(NormalMedicationPart.NORMAL_MEDICATION_PART.SKU_ID, values);
    }

    /**
     * Fetch records that have <code>chinese_medicine_id BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<NormalMedicationPartPO> fetchRangeOfChineseMedicineId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(NormalMedicationPart.NORMAL_MEDICATION_PART.CHINESE_MEDICINE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>chinese_medicine_id IN (values)</code>
     */
    public List<NormalMedicationPartPO> fetchByChineseMedicineId(Long... values) {
        return fetch(NormalMedicationPart.NORMAL_MEDICATION_PART.CHINESE_MEDICINE_ID, values);
    }

    /**
     * Fetch records that have <code>normal_medication_id BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<NormalMedicationPartPO> fetchRangeOfNormalMedicationId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(NormalMedicationPart.NORMAL_MEDICATION_PART.NORMAL_MEDICATION_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>normal_medication_id IN (values)</code>
     */
    public List<NormalMedicationPartPO> fetchByNormalMedicationId(Long... values) {
        return fetch(NormalMedicationPart.NORMAL_MEDICATION_PART.NORMAL_MEDICATION_ID, values);
    }
        public List<NormalMedicationPartPO> fetchById(Collection<Long> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.NormalMedicationPart.NORMAL_MEDICATION_PART.ID, value.toArray(new Long[value.size()]));
        }
        public List<NormalMedicationPartPO> fetchByWeight(Collection<BigDecimal> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.NormalMedicationPart.NORMAL_MEDICATION_PART.WEIGHT, value.toArray(new BigDecimal[value.size()]));
        }
        public List<NormalMedicationPartPO> fetchByName(Collection<String> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.NormalMedicationPart.NORMAL_MEDICATION_PART.NAME, value.toArray(new String[value.size()]));
        }
        public List<NormalMedicationPartPO> fetchBySkuId(Collection<Long> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.NormalMedicationPart.NORMAL_MEDICATION_PART.SKU_ID, value.toArray(new Long[value.size()]));
        }
        public List<NormalMedicationPartPO> fetchByChineseMedicineId(Collection<Long> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.NormalMedicationPart.NORMAL_MEDICATION_PART.CHINESE_MEDICINE_ID, value.toArray(new Long[value.size()]));
        }
        public List<NormalMedicationPartPO> fetchByNormalMedicationId(Collection<Long> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.NormalMedicationPart.NORMAL_MEDICATION_PART.NORMAL_MEDICATION_ID, value.toArray(new Long[value.size()]));
        }
}
