/*
 * This file is generated by jOOQ.
 */
package cn.yxtreme.jooq.jooq.tables.daos;


import cn.yxtreme.jooq.jooq.tables.RegularUsageCount;
import cn.yxtreme.jooq.jooq.tables.pojos.RegularUsageCountPO;
import cn.yxtreme.jooq.jooq.tables.records.RegularUsageCountRecord;

import java.time.LocalDateTime;
import java.util.Collection;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RegularUsageCountDao extends DAOImpl<RegularUsageCountRecord, RegularUsageCountPO, Long> {

    /**
     * Create a new RegularUsageCountDao without any configuration
     */
    public RegularUsageCountDao() {
        super(RegularUsageCount.REGULAR_USAGE_COUNT, RegularUsageCountPO.class);
    }

    /**
     * Create a new RegularUsageCountDao with an attached configuration
     */
    public RegularUsageCountDao(Configuration configuration) {
        super(RegularUsageCount.REGULAR_USAGE_COUNT, RegularUsageCountPO.class, configuration);
    }

    @Override
    public Long getId(RegularUsageCountPO object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<RegularUsageCountPO> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(RegularUsageCount.REGULAR_USAGE_COUNT.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<RegularUsageCountPO> fetchById(Long... values) {
        return fetch(RegularUsageCount.REGULAR_USAGE_COUNT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public RegularUsageCountPO fetchOneById(Long value) {
        return fetchOne(RegularUsageCount.REGULAR_USAGE_COUNT.ID, value);
    }

    /**
     * Fetch records that have <code>sku BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<RegularUsageCountPO> fetchRangeOfSku(String lowerInclusive, String upperInclusive) {
        return fetchRange(RegularUsageCount.REGULAR_USAGE_COUNT.SKU, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>sku IN (values)</code>
     */
    public List<RegularUsageCountPO> fetchBySku(String... values) {
        return fetch(RegularUsageCount.REGULAR_USAGE_COUNT.SKU, values);
    }

    /**
     * Fetch records that have <code>count BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<RegularUsageCountPO> fetchRangeOfCount(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(RegularUsageCount.REGULAR_USAGE_COUNT.COUNT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>count IN (values)</code>
     */
    public List<RegularUsageCountPO> fetchByCount(Long... values) {
        return fetch(RegularUsageCount.REGULAR_USAGE_COUNT.COUNT, values);
    }

    /**
     * Fetch records that have <code>created BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<RegularUsageCountPO> fetchRangeOfCreated(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(RegularUsageCount.REGULAR_USAGE_COUNT.CREATED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created IN (values)</code>
     */
    public List<RegularUsageCountPO> fetchByCreated(LocalDateTime... values) {
        return fetch(RegularUsageCount.REGULAR_USAGE_COUNT.CREATED, values);
    }
        public List<RegularUsageCountPO> fetchById(Collection<Long> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.RegularUsageCount.REGULAR_USAGE_COUNT.ID, value.toArray(new Long[value.size()]));
        }
        public List<RegularUsageCountPO> fetchBySku(Collection<String> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.RegularUsageCount.REGULAR_USAGE_COUNT.SKU, value.toArray(new String[value.size()]));
        }
        public List<RegularUsageCountPO> fetchByCount(Collection<Long> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.RegularUsageCount.REGULAR_USAGE_COUNT.COUNT, value.toArray(new Long[value.size()]));
        }
        public List<RegularUsageCountPO> fetchByCreated(Collection<LocalDateTime> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.RegularUsageCount.REGULAR_USAGE_COUNT.CREATED, value.toArray(new LocalDateTime[value.size()]));
        }
}
