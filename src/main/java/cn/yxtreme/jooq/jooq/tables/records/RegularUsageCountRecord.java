/*
 * This file is generated by jOOQ.
 */
package cn.yxtreme.jooq.jooq.tables.records;


import cn.yxtreme.jooq.jooq.tables.RegularUsageCount;
import cn.yxtreme.jooq.jooq.tables.pojos.RegularUsageCountPO;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RegularUsageCountRecord extends UpdatableRecordImpl<RegularUsageCountRecord> implements Record4<Long, String, Long, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.regular_usage_count.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.regular_usage_count.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.regular_usage_count.sku</code>.
     */
    public void setSku(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.regular_usage_count.sku</code>.
     */
    public String getSku() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.regular_usage_count.count</code>.
     */
    public void setCount(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.regular_usage_count.count</code>.
     */
    public Long getCount() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.regular_usage_count.created</code>.
     */
    public void setCreated(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.regular_usage_count.created</code>.
     */
    public LocalDateTime getCreated() {
        return (LocalDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, String, Long, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, String, Long, LocalDateTime> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return RegularUsageCount.REGULAR_USAGE_COUNT.ID;
    }

    @Override
    public Field<String> field2() {
        return RegularUsageCount.REGULAR_USAGE_COUNT.SKU;
    }

    @Override
    public Field<Long> field3() {
        return RegularUsageCount.REGULAR_USAGE_COUNT.COUNT;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return RegularUsageCount.REGULAR_USAGE_COUNT.CREATED;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getSku();
    }

    @Override
    public Long component3() {
        return getCount();
    }

    @Override
    public LocalDateTime component4() {
        return getCreated();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getSku();
    }

    @Override
    public Long value3() {
        return getCount();
    }

    @Override
    public LocalDateTime value4() {
        return getCreated();
    }

    @Override
    public RegularUsageCountRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public RegularUsageCountRecord value2(String value) {
        setSku(value);
        return this;
    }

    @Override
    public RegularUsageCountRecord value3(Long value) {
        setCount(value);
        return this;
    }

    @Override
    public RegularUsageCountRecord value4(LocalDateTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public RegularUsageCountRecord values(Long value1, String value2, Long value3, LocalDateTime value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RegularUsageCountRecord
     */
    public RegularUsageCountRecord() {
        super(RegularUsageCount.REGULAR_USAGE_COUNT);
    }

    /**
     * Create a detached, initialised RegularUsageCountRecord
     */
    public RegularUsageCountRecord(Long id, String sku, Long count, LocalDateTime created) {
        super(RegularUsageCount.REGULAR_USAGE_COUNT);

        setId(id);
        setSku(sku);
        setCount(count);
        setCreated(created);
    }

    /**
     * Create a detached, initialised RegularUsageCountRecord
     */
    public RegularUsageCountRecord(RegularUsageCountPO value) {
        super(RegularUsageCount.REGULAR_USAGE_COUNT);

        if (value != null) {
            setId(value.getId());
            setSku(value.getSku());
            setCount(value.getCount());
            setCreated(value.getCreated());
        }
    }
}
