/*
 * This file is generated by jOOQ.
 */
package cn.yxtreme.jooq.jooq.tables;


import cn.yxtreme.jooq.jooq.Keys;
import cn.yxtreme.jooq.jooq.Public;
import cn.yxtreme.jooq.jooq.tables.records.ExpressDeliveryRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.JSON;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row8;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExpressDelivery extends TableImpl<ExpressDeliveryRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.express_delivery</code>
     */
    public static final ExpressDelivery EXPRESS_DELIVERY = new ExpressDelivery();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ExpressDeliveryRecord> getRecordType() {
        return ExpressDeliveryRecord.class;
    }

    /**
     * The column <code>public.express_delivery.id</code>. 主键id
     */
    public final TableField<ExpressDeliveryRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "主键id");

    /**
     * The column <code>public.express_delivery.carrier_company</code>. 快递公司
     */
    public final TableField<ExpressDeliveryRecord, String> CARRIER_COMPANY = createField(DSL.name("carrier_company"), SQLDataType.VARCHAR.nullable(false).defaultValue(DSL.field("''::character varying", SQLDataType.VARCHAR)), this, "快递公司");

    /**
     * The column <code>public.express_delivery.carrier_orderId</code>. 快递单号 
     */
    public final TableField<ExpressDeliveryRecord, String> CARRIER_ORDERID = createField(DSL.name("carrier_orderId"), SQLDataType.VARCHAR(64).nullable(false), this, "快递单号 ");

    /**
     * The column <code>public.express_delivery.created_time</code>. 创建时间
     */
    public final TableField<ExpressDeliveryRecord, LocalDateTime> CREATED_TIME = createField(DSL.name("created_time"), SQLDataType.LOCALDATETIME(6).nullable(false).defaultValue(DSL.field("now()", SQLDataType.LOCALDATETIME)), this, "创建时间");

    /**
     * The column <code>public.express_delivery.updated_time</code>. 更新时间
     */
    public final TableField<ExpressDeliveryRecord, LocalDateTime> UPDATED_TIME = createField(DSL.name("updated_time"), SQLDataType.LOCALDATETIME(6).nullable(false).defaultValue(DSL.field("now()", SQLDataType.LOCALDATETIME)), this, "更新时间");

    /**
     * The column <code>public.express_delivery.order_id</code>. 订单id
     */
    public final TableField<ExpressDeliveryRecord, String> ORDER_ID = createField(DSL.name("order_id"), SQLDataType.VARCHAR.nullable(false).defaultValue(DSL.field("''::character varying", SQLDataType.VARCHAR)), this, "订单id");

    /**
     * The column <code>public.express_delivery.deliver_info</code>. 快递信息
     */
    public final TableField<ExpressDeliveryRecord, JSON> DELIVER_INFO = createField(DSL.name("deliver_info"), SQLDataType.JSON, this, "快递信息");

    /**
     * The column <code>public.express_delivery.third_business</code>. 渠道编码
     */
    public final TableField<ExpressDeliveryRecord, Integer> THIRD_BUSINESS = createField(DSL.name("third_business"), SQLDataType.INTEGER.defaultValue(DSL.field("1", SQLDataType.INTEGER)), this, "渠道编码");

    private ExpressDelivery(Name alias, Table<ExpressDeliveryRecord> aliased) {
        this(alias, aliased, null);
    }

    private ExpressDelivery(Name alias, Table<ExpressDeliveryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.express_delivery</code> table reference
     */
    public ExpressDelivery(String alias) {
        this(DSL.name(alias), EXPRESS_DELIVERY);
    }

    /**
     * Create an aliased <code>public.express_delivery</code> table reference
     */
    public ExpressDelivery(Name alias) {
        this(alias, EXPRESS_DELIVERY);
    }

    /**
     * Create a <code>public.express_delivery</code> table reference
     */
    public ExpressDelivery() {
        this(DSL.name("express_delivery"), null);
    }

    public <O extends Record> ExpressDelivery(Table<O> child, ForeignKey<O, ExpressDeliveryRecord> key) {
        super(child, key, EXPRESS_DELIVERY);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public Identity<ExpressDeliveryRecord, Long> getIdentity() {
        return (Identity<ExpressDeliveryRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<ExpressDeliveryRecord> getPrimaryKey() {
        return Keys.EXPRESS_DELIVERY_PKEY;
    }

    @Override
    public List<UniqueKey<ExpressDeliveryRecord>> getUniqueKeys() {
        return Arrays.asList(Keys.EXPRESS_DELIVERY_ORDER_ID_THIRD_BUSINESS_UINDEX);
    }

    @Override
    public ExpressDelivery as(String alias) {
        return new ExpressDelivery(DSL.name(alias), this);
    }

    @Override
    public ExpressDelivery as(Name alias) {
        return new ExpressDelivery(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ExpressDelivery rename(String name) {
        return new ExpressDelivery(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ExpressDelivery rename(Name name) {
        return new ExpressDelivery(name, null);
    }

    // -------------------------------------------------------------------------
    // Row8 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, String, String, LocalDateTime, LocalDateTime, String, JSON, Integer> fieldsRow() {
        return (Row8) super.fieldsRow();
    }
}
