/*
 * This file is generated by jOOQ.
 */
package cn.yxtreme.jooq.jooq.tables;


import cn.yxtreme.jooq.jooq.Keys;
import cn.yxtreme.jooq.jooq.Public;
import cn.yxtreme.jooq.jooq.tables.records.OrderV2Record;

import java.math.BigDecimal;
import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * 订单表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrderV2 extends TableImpl<OrderV2Record> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.order_v2</code>
     */
    public static final OrderV2 ORDER_V2 = new OrderV2();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OrderV2Record> getRecordType() {
        return OrderV2Record.class;
    }

    /**
     * The column <code>public.order_v2.id</code>. 主键id
     */
    public final TableField<OrderV2Record, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "主键id");

    /**
     * The column <code>public.order_v2.created_time</code>. 创建时间
     */
    public final TableField<OrderV2Record, LocalDateTime> CREATED_TIME = createField(DSL.name("created_time"), SQLDataType.LOCALDATETIME(6).defaultValue(DSL.field("CURRENT_TIMESTAMP(0)", SQLDataType.LOCALDATETIME)), this, "创建时间");

    /**
     * The column <code>public.order_v2.updated_time</code>. 更新时间
     */
    public final TableField<OrderV2Record, LocalDateTime> UPDATED_TIME = createField(DSL.name("updated_time"), SQLDataType.LOCALDATETIME(6), this, "更新时间");

    /**
     * The column <code>public.order_v2.order_status</code>. 订单状态(1, "已创建" 2,
     * "已支付" 3, "配送中" 4, "妥投" 6, "取消" 7, "退款" 8, "药店配货中")
     */
    public final TableField<OrderV2Record, Integer> ORDER_STATUS = createField(DSL.name("order_status"), SQLDataType.INTEGER, this, "订单状态(1, \"已创建\" 2, \"已支付\" 3, \"配送中\" 4, \"妥投\" 6, \"取消\" 7, \"退款\" 8, \"药店配货中\")");

    /**
     * The column <code>public.order_v2.third_order_id</code>. 叮当对应的订单号
     */
    public final TableField<OrderV2Record, String> THIRD_ORDER_ID = createField(DSL.name("third_order_id"), SQLDataType.VARCHAR, this, "叮当对应的订单号");

    /**
     * The column <code>public.order_v2.third_business</code>. 1:叮当 2: 保忠堂 3:小药药
     */
    public final TableField<OrderV2Record, Integer> THIRD_BUSINESS = createField(DSL.name("third_business"), SQLDataType.INTEGER, this, "1:叮当 2: 保忠堂 3:小药药");

    /**
     * The column <code>public.order_v2.total_price</code>. 商品总金额 单位：分

     */
    public final TableField<OrderV2Record, Long> TOTAL_PRICE = createField(DSL.name("total_price"), SQLDataType.BIGINT, this, "商品总金额 单位：分\n");

    /**
     * The column <code>public.order_v2.total_pay</code>. 支付金额 单位：分             
     *     = deductionAmount + hadPay = totalPrice + deliverPay 
     */
    public final TableField<OrderV2Record, Long> TOTAL_PAY = createField(DSL.name("total_pay"), SQLDataType.BIGINT, this, "支付金额 单位：分                  = deductionAmount + hadPay = totalPrice + deliverPay ");

    /**
     * The column <code>public.order_v2.deduction_ammount</code>. 保险抵扣金额 单位：分
     */
    public final TableField<OrderV2Record, Long> DEDUCTION_AMMOUNT = createField(DSL.name("deduction_ammount"), SQLDataType.BIGINT, this, "保险抵扣金额 单位：分");

    /**
     * The column <code>public.order_v2.deliver_pay</code>. 运费单位分
     */
    public final TableField<OrderV2Record, Long> DELIVER_PAY = createField(DSL.name("deliver_pay"), SQLDataType.BIGINT, this, "运费单位分");

    /**
     * The column <code>public.order_v2.pay_time</code>. 支付时间
     */
    public final TableField<OrderV2Record, LocalDateTime> PAY_TIME = createField(DSL.name("pay_time"), SQLDataType.LOCALDATETIME(6), this, "支付时间");

    /**
     * The column <code>public.order_v2.init_time</code>. 订单生成时间
     */
    public final TableField<OrderV2Record, LocalDateTime> INIT_TIME = createField(DSL.name("init_time"), SQLDataType.LOCALDATETIME(6), this, "订单生成时间");

    /**
     * The column <code>public.order_v2.commit_time</code>. 订单提交时间
     */
    public final TableField<OrderV2Record, LocalDateTime> COMMIT_TIME = createField(DSL.name("commit_time"), SQLDataType.LOCALDATETIME(6), this, "订单提交时间");

    /**
     * The column <code>public.order_v2.cancel_time</code>. 订单取消时间
     */
    public final TableField<OrderV2Record, LocalDateTime> CANCEL_TIME = createField(DSL.name("cancel_time"), SQLDataType.LOCALDATETIME(6), this, "订单取消时间");

    /**
     * The column <code>public.order_v2.refund_time</code>. 退款时间
     */
    public final TableField<OrderV2Record, LocalDateTime> REFUND_TIME = createField(DSL.name("refund_time"), SQLDataType.LOCALDATETIME(6), this, "退款时间");

    /**
     * The column <code>public.order_v2.had_pay</code>. 现金支付金额 单位：分
     */
    public final TableField<OrderV2Record, Long> HAD_PAY = createField(DSL.name("had_pay"), SQLDataType.BIGINT, this, "现金支付金额 单位：分");

    /**
     * The column <code>public.order_v2.latitude</code>. 纬度
     */
    public final TableField<OrderV2Record, BigDecimal> LATITUDE = createField(DSL.name("latitude"), SQLDataType.NUMERIC(16, 8), this, "纬度");

    /**
     * The column <code>public.order_v2.longitude</code>. 经度
     */
    public final TableField<OrderV2Record, BigDecimal> LONGITUDE = createField(DSL.name("longitude"), SQLDataType.NUMERIC(16, 8), this, "经度");

    /**
     * The column <code>public.order_v2.rights</code>. 是否使用权益
     */
    public final TableField<OrderV2Record, Boolean> RIGHTS = createField(DSL.name("rights"), SQLDataType.BOOLEAN, this, "是否使用权益");

    /**
     * The column <code>public.order_v2.rights_use_id</code>. 权益锁定使用的id
     */
    public final TableField<OrderV2Record, Long> RIGHTS_USE_ID = createField(DSL.name("rights_use_id"), SQLDataType.BIGINT, this, "权益锁定使用的id");

    /**
     * The column <code>public.order_v2.delivered_time</code>. 妥投时间
     */
    public final TableField<OrderV2Record, LocalDateTime> DELIVERED_TIME = createField(DSL.name("delivered_time"), SQLDataType.LOCALDATETIME(6), this, "妥投时间");

    /**
     * The column <code>public.order_v2.rights_commit</code>. 权益是否已提交
     */
    public final TableField<OrderV2Record, Boolean> RIGHTS_COMMIT = createField(DSL.name("rights_commit"), SQLDataType.BOOLEAN.defaultValue(DSL.field("false", SQLDataType.BOOLEAN)), this, "权益是否已提交");

    /**
     * The column <code>public.order_v2.rights_id</code>. 权益id
     */
    public final TableField<OrderV2Record, Long> RIGHTS_ID = createField(DSL.name("rights_id"), SQLDataType.BIGINT, this, "权益id");

    /**
     * The column <code>public.order_v2.lg_province</code>. 收货省份
     */
    public final TableField<OrderV2Record, String> LG_PROVINCE = createField(DSL.name("lg_province"), SQLDataType.VARCHAR, this, "收货省份");

    /**
     * The column <code>public.order_v2.lg_province_code</code>. 收货省份 编码
     */
    public final TableField<OrderV2Record, String> LG_PROVINCE_CODE = createField(DSL.name("lg_province_code"), SQLDataType.VARCHAR, this, "收货省份 编码");

    /**
     * The column <code>public.order_v2.lg_city</code>. 收件城市
     */
    public final TableField<OrderV2Record, String> LG_CITY = createField(DSL.name("lg_city"), SQLDataType.VARCHAR, this, "收件城市");

    /**
     * The column <code>public.order_v2.lg_city_code</code>. 收件城市 编码
     */
    public final TableField<OrderV2Record, String> LG_CITY_CODE = createField(DSL.name("lg_city_code"), SQLDataType.VARCHAR, this, "收件城市 编码");

    /**
     * The column <code>public.order_v2.lg_area</code>. 收货区
     */
    public final TableField<OrderV2Record, String> LG_AREA = createField(DSL.name("lg_area"), SQLDataType.VARCHAR, this, "收货区");

    /**
     * The column <code>public.order_v2.lg_area_code</code>. 收货区 编码
     */
    public final TableField<OrderV2Record, String> LG_AREA_CODE = createField(DSL.name("lg_area_code"), SQLDataType.VARCHAR, this, "收货区 编码");

    /**
     * The column <code>public.order_v2.lg_name</code>. 收货人
     */
    public final TableField<OrderV2Record, String> LG_NAME = createField(DSL.name("lg_name"), SQLDataType.VARCHAR, this, "收货人");

    /**
     * The column <code>public.order_v2.lg_phone</code>. 收货手机
     */
    public final TableField<OrderV2Record, String> LG_PHONE = createField(DSL.name("lg_phone"), SQLDataType.VARCHAR, this, "收货手机");

    /**
     * The column <code>public.order_v2.lg_address</code>. 收货详细地址
     */
    public final TableField<OrderV2Record, String> LG_ADDRESS = createField(DSL.name("lg_address"), SQLDataType.VARCHAR, this, "收货详细地址");

    private OrderV2(Name alias, Table<OrderV2Record> aliased) {
        this(alias, aliased, null);
    }

    private OrderV2(Name alias, Table<OrderV2Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("订单表"), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.order_v2</code> table reference
     */
    public OrderV2(String alias) {
        this(DSL.name(alias), ORDER_V2);
    }

    /**
     * Create an aliased <code>public.order_v2</code> table reference
     */
    public OrderV2(Name alias) {
        this(alias, ORDER_V2);
    }

    /**
     * Create a <code>public.order_v2</code> table reference
     */
    public OrderV2() {
        this(DSL.name("order_v2"), null);
    }

    public <O extends Record> OrderV2(Table<O> child, ForeignKey<O, OrderV2Record> key) {
        super(child, key, ORDER_V2);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public Identity<OrderV2Record, Long> getIdentity() {
        return (Identity<OrderV2Record, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<OrderV2Record> getPrimaryKey() {
        return Keys.ORDER_V2_V2_PK;
    }

    @Override
    public OrderV2 as(String alias) {
        return new OrderV2(DSL.name(alias), this);
    }

    @Override
    public OrderV2 as(Name alias) {
        return new OrderV2(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public OrderV2 rename(String name) {
        return new OrderV2(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public OrderV2 rename(Name name) {
        return new OrderV2(name, null);
    }
}
