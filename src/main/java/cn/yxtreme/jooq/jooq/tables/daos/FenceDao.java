/*
 * This file is generated by jOOQ.
 */
package cn.yxtreme.jooq.jooq.tables.daos;


import cn.yxtreme.jooq.jooq.tables.Fence;
import cn.yxtreme.jooq.jooq.tables.pojos.FencePO;
import cn.yxtreme.jooq.jooq.tables.records.FenceRecord;

import java.util.Collection;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * 地理围栏
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FenceDao extends DAOImpl<FenceRecord, FencePO, Long> {

    /**
     * Create a new FenceDao without any configuration
     */
    public FenceDao() {
        super(Fence.FENCE, FencePO.class);
    }

    /**
     * Create a new FenceDao with an attached configuration
     */
    public FenceDao(Configuration configuration) {
        super(Fence.FENCE, FencePO.class, configuration);
    }

    @Override
    public Long getId(FencePO object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<FencePO> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Fence.FENCE.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<FencePO> fetchById(Long... values) {
        return fetch(Fence.FENCE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public FencePO fetchOneById(Long value) {
        return fetchOne(Fence.FENCE.ID, value);
    }

    /**
     * Fetch records that have <code>province_code BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<FencePO> fetchRangeOfProvinceCode(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Fence.FENCE.PROVINCE_CODE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>province_code IN (values)</code>
     */
    public List<FencePO> fetchByProvinceCode(Long... values) {
        return fetch(Fence.FENCE.PROVINCE_CODE, values);
    }

    /**
     * Fetch records that have <code>shop_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<FencePO> fetchRangeOfShopId(String lowerInclusive, String upperInclusive) {
        return fetchRange(Fence.FENCE.SHOP_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>shop_id IN (values)</code>
     */
    public List<FencePO> fetchByShopId(String... values) {
        return fetch(Fence.FENCE.SHOP_ID, values);
    }

    /**
     * Fetch records that have <code>shop_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<FencePO> fetchRangeOfShopName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Fence.FENCE.SHOP_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>shop_name IN (values)</code>
     */
    public List<FencePO> fetchByShopName(String... values) {
        return fetch(Fence.FENCE.SHOP_NAME, values);
    }
        public List<FencePO> fetchById(Collection<Long> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.Fence.FENCE.ID, value.toArray(new Long[value.size()]));
        }
        public List<FencePO> fetchByProvinceCode(Collection<Long> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.Fence.FENCE.PROVINCE_CODE, value.toArray(new Long[value.size()]));
        }
        public List<FencePO> fetchByShopId(Collection<String> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.Fence.FENCE.SHOP_ID, value.toArray(new String[value.size()]));
        }
        public List<FencePO> fetchByShopName(Collection<String> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.Fence.FENCE.SHOP_NAME, value.toArray(new String[value.size()]));
        }
}
