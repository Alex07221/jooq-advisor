/*
 * This file is generated by jOOQ.
 */
package cn.yxtreme.jooq.jooq.tables;


import cn.yxtreme.jooq.jooq.Indexes;
import cn.yxtreme.jooq.jooq.Public;
import cn.yxtreme.jooq.jooq.tables.records.PrescriptionReviewRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * 处方审核表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PrescriptionReview extends TableImpl<PrescriptionReviewRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.prescription_review</code>
     */
    public static final PrescriptionReview PRESCRIPTION_REVIEW = new PrescriptionReview();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PrescriptionReviewRecord> getRecordType() {
        return PrescriptionReviewRecord.class;
    }

    /**
     * The column <code>public.prescription_review.id</code>. 自增主键

     */
    public final TableField<PrescriptionReviewRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "自增主键\n");

    /**
     * The column <code>public.prescription_review.prescription_order_id</code>.
     * 订单表id
     */
    public final TableField<PrescriptionReviewRecord, Long> PRESCRIPTION_ORDER_ID = createField(DSL.name("prescription_order_id"), SQLDataType.BIGINT.nullable(false), this, "订单表id");

    /**
     * The column <code>public.prescription_review.prescription_order_no</code>.
     * 订单编号
     */
    public final TableField<PrescriptionReviewRecord, String> PRESCRIPTION_ORDER_NO = createField(DSL.name("prescription_order_no"), SQLDataType.VARCHAR.nullable(false), this, "订单编号");

    /**
     * The column <code>public.prescription_review.consult_order_id</code>.
     * 问诊订单id
     */
    public final TableField<PrescriptionReviewRecord, Long> CONSULT_ORDER_ID = createField(DSL.name("consult_order_id"), SQLDataType.BIGINT.nullable(false), this, "问诊订单id");

    /**
     * The column <code>public.prescription_review.apply_user_id</code>. 申请助手id
     */
    public final TableField<PrescriptionReviewRecord, Long> APPLY_USER_ID = createField(DSL.name("apply_user_id"), SQLDataType.BIGINT.nullable(false), this, "申请助手id");

    /**
     * The column <code>public.prescription_review.apply_user_name</code>.
     * 申请助手名字
     */
    public final TableField<PrescriptionReviewRecord, String> APPLY_USER_NAME = createField(DSL.name("apply_user_name"), SQLDataType.VARCHAR, this, "申请助手名字");

    /**
     * The column <code>public.prescription_review.session_id</code>. 对应im聊天
     * 会话id
     */
    public final TableField<PrescriptionReviewRecord, Long> SESSION_ID = createField(DSL.name("session_id"), SQLDataType.BIGINT.nullable(false), this, "对应im聊天 会话id");

    /**
     * The column <code>public.prescription_review.review_user_id</code>. 审核人id
     */
    public final TableField<PrescriptionReviewRecord, Long> REVIEW_USER_ID = createField(DSL.name("review_user_id"), SQLDataType.BIGINT, this, "审核人id");

    /**
     * The column <code>public.prescription_review.review_user_name</code>.
     * 审核人姓名
     */
    public final TableField<PrescriptionReviewRecord, String> REVIEW_USER_NAME = createField(DSL.name("review_user_name"), SQLDataType.VARCHAR, this, "审核人姓名");

    /**
     * The column <code>public.prescription_review.status</code>. 审核状态
     * 0:待审核
     * 1:审核通过
     * 2:驳回
     * 3:流转
     * 4:流转失败 等待再次流转
     */
    public final TableField<PrescriptionReviewRecord, Integer> STATUS = createField(DSL.name("status"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("0", SQLDataType.INTEGER)), this, "审核状态\n0:待审核\n1:审核通过\n2:驳回\n3:流转\n4:流转失败 等待再次流转");

    /**
     * The column <code>public.prescription_review.created_at</code>. 创建时间
     */
    public final TableField<PrescriptionReviewRecord, LocalDateTime> CREATED_AT = createField(DSL.name("created_at"), SQLDataType.LOCALDATETIME(6).nullable(false).defaultValue(DSL.field("now()", SQLDataType.LOCALDATETIME)), this, "创建时间");

    /**
     * The column <code>public.prescription_review.updated_at</code>. 更新时间
     */
    public final TableField<PrescriptionReviewRecord, LocalDateTime> UPDATED_AT = createField(DSL.name("updated_at"), SQLDataType.LOCALDATETIME(6).nullable(false).defaultValue(DSL.field("now()", SQLDataType.LOCALDATETIME)), this, "更新时间");

    /**
     * The column <code>public.prescription_review.handler_user_id</code>.
     * 工作站指定的处理人id
     */
    public final TableField<PrescriptionReviewRecord, Long> HANDLER_USER_ID = createField(DSL.name("handler_user_id"), SQLDataType.BIGINT.nullable(false), this, "工作站指定的处理人id");

    /**
     * The column <code>public.prescription_review.handler_user_name</code>.
     * 工作站指定的处理人name
     */
    public final TableField<PrescriptionReviewRecord, String> HANDLER_USER_NAME = createField(DSL.name("handler_user_name"), SQLDataType.VARCHAR, this, "工作站指定的处理人name");

    /**
     * The column <code>public.prescription_review.reject_content</code>. 驳回原因
     */
    public final TableField<PrescriptionReviewRecord, String> REJECT_CONTENT = createField(DSL.name("reject_content"), SQLDataType.VARCHAR, this, "驳回原因");

    /**
     * The column <code>public.prescription_review.arrangement_id</code>. 药单id
     */
    public final TableField<PrescriptionReviewRecord, Long> ARRANGEMENT_ID = createField(DSL.name("arrangement_id"), SQLDataType.BIGINT.nullable(false), this, "药单id");

    /**
     * The column <code>public.prescription_review.department_name</code>. 科室名
     */
    public final TableField<PrescriptionReviewRecord, String> DEPARTMENT_NAME = createField(DSL.name("department_name"), SQLDataType.VARCHAR.nullable(false), this, "科室名");

    /**
     * The column <code>public.prescription_review.router_time</code>. 流转时间
     */
    public final TableField<PrescriptionReviewRecord, LocalDateTime> ROUTER_TIME = createField(DSL.name("router_time"), SQLDataType.LOCALDATETIME(6), this, "流转时间");

    /**
     * The column <code>public.prescription_review.router_user_id</code>. 流转用户
     */
    public final TableField<PrescriptionReviewRecord, Long> ROUTER_USER_ID = createField(DSL.name("router_user_id"), SQLDataType.BIGINT, this, "流转用户");

    /**
     * The column <code>public.prescription_review.router_user_name</code>.
     * 流转用户名
     */
    public final TableField<PrescriptionReviewRecord, String> ROUTER_USER_NAME = createField(DSL.name("router_user_name"), SQLDataType.VARCHAR, this, "流转用户名");

    /**
     * The column <code>public.prescription_review.review_time</code>. 审核时间
     */
    public final TableField<PrescriptionReviewRecord, LocalDateTime> REVIEW_TIME = createField(DSL.name("review_time"), SQLDataType.LOCALDATETIME(6), this, "审核时间");

    /**
     * The column <code>public.prescription_review.provider_name</code>.
     */
    public final TableField<PrescriptionReviewRecord, String> PROVIDER_NAME = createField(DSL.name("provider_name"), SQLDataType.VARCHAR.nullable(false).defaultValue(DSL.field("''::character varying", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.prescription_review.provider_id</code>.
     */
    public final TableField<PrescriptionReviewRecord, Long> PROVIDER_ID = createField(DSL.name("provider_id"), SQLDataType.BIGINT.defaultValue(DSL.field("0", SQLDataType.BIGINT)), this, "");

    private PrescriptionReview(Name alias, Table<PrescriptionReviewRecord> aliased) {
        this(alias, aliased, null);
    }

    private PrescriptionReview(Name alias, Table<PrescriptionReviewRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("处方审核表"), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.prescription_review</code> table reference
     */
    public PrescriptionReview(String alias) {
        this(DSL.name(alias), PRESCRIPTION_REVIEW);
    }

    /**
     * Create an aliased <code>public.prescription_review</code> table reference
     */
    public PrescriptionReview(Name alias) {
        this(alias, PRESCRIPTION_REVIEW);
    }

    /**
     * Create a <code>public.prescription_review</code> table reference
     */
    public PrescriptionReview() {
        this(DSL.name("prescription_review"), null);
    }

    public <O extends Record> PrescriptionReview(Table<O> child, ForeignKey<O, PrescriptionReviewRecord> key) {
        super(child, key, PRESCRIPTION_REVIEW);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.PRESCRIPTION_REVIEW__ARRID, Indexes.PRESCRIPTION_REVIEW_STATUS_IDX);
    }

    @Override
    public Identity<PrescriptionReviewRecord, Long> getIdentity() {
        return (Identity<PrescriptionReviewRecord, Long>) super.getIdentity();
    }

    @Override
    public PrescriptionReview as(String alias) {
        return new PrescriptionReview(DSL.name(alias), this);
    }

    @Override
    public PrescriptionReview as(Name alias) {
        return new PrescriptionReview(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PrescriptionReview rename(String name) {
        return new PrescriptionReview(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PrescriptionReview rename(Name name) {
        return new PrescriptionReview(name, null);
    }
}
