/*
 * This file is generated by jOOQ.
 */
package cn.yxtreme.jooq.jooq.tables.daos;


import cn.yxtreme.jooq.jooq.tables.InterfaceRecord;
import cn.yxtreme.jooq.jooq.tables.pojos.InterfaceRecordPO;
import cn.yxtreme.jooq.jooq.tables.records.InterfaceRecordRecord;

import java.time.OffsetDateTime;
import java.util.Collection;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * 接口调用记录表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InterfaceRecordDao extends DAOImpl<InterfaceRecordRecord, InterfaceRecordPO, Long> {

    /**
     * Create a new InterfaceRecordDao without any configuration
     */
    public InterfaceRecordDao() {
        super(InterfaceRecord.INTERFACE_RECORD, InterfaceRecordPO.class);
    }

    /**
     * Create a new InterfaceRecordDao with an attached configuration
     */
    public InterfaceRecordDao(Configuration configuration) {
        super(InterfaceRecord.INTERFACE_RECORD, InterfaceRecordPO.class, configuration);
    }

    @Override
    public Long getId(InterfaceRecordPO object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<InterfaceRecordPO> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(InterfaceRecord.INTERFACE_RECORD.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<InterfaceRecordPO> fetchById(Long... values) {
        return fetch(InterfaceRecord.INTERFACE_RECORD.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public InterfaceRecordPO fetchOneById(Long value) {
        return fetchOne(InterfaceRecord.INTERFACE_RECORD.ID, value);
    }

    /**
     * Fetch records that have <code>interface_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<InterfaceRecordPO> fetchRangeOfInterfaceName(String lowerInclusive, String upperInclusive) {
        return fetchRange(InterfaceRecord.INTERFACE_RECORD.INTERFACE_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>interface_name IN (values)</code>
     */
    public List<InterfaceRecordPO> fetchByInterfaceName(String... values) {
        return fetch(InterfaceRecord.INTERFACE_RECORD.INTERFACE_NAME, values);
    }

    /**
     * Fetch records that have <code>request BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<InterfaceRecordPO> fetchRangeOfRequest(String lowerInclusive, String upperInclusive) {
        return fetchRange(InterfaceRecord.INTERFACE_RECORD.REQUEST, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>request IN (values)</code>
     */
    public List<InterfaceRecordPO> fetchByRequest(String... values) {
        return fetch(InterfaceRecord.INTERFACE_RECORD.REQUEST, values);
    }

    /**
     * Fetch records that have <code>response BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<InterfaceRecordPO> fetchRangeOfResponse(String lowerInclusive, String upperInclusive) {
        return fetchRange(InterfaceRecord.INTERFACE_RECORD.RESPONSE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>response IN (values)</code>
     */
    public List<InterfaceRecordPO> fetchByResponse(String... values) {
        return fetch(InterfaceRecord.INTERFACE_RECORD.RESPONSE, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<InterfaceRecordPO> fetchRangeOfCreatedAt(OffsetDateTime lowerInclusive, OffsetDateTime upperInclusive) {
        return fetchRange(InterfaceRecord.INTERFACE_RECORD.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<InterfaceRecordPO> fetchByCreatedAt(OffsetDateTime... values) {
        return fetch(InterfaceRecord.INTERFACE_RECORD.CREATED_AT, values);
    }
        public List<InterfaceRecordPO> fetchById(Collection<Long> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.InterfaceRecord.INTERFACE_RECORD.ID, value.toArray(new Long[value.size()]));
        }
        public List<InterfaceRecordPO> fetchByInterfaceName(Collection<String> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.InterfaceRecord.INTERFACE_RECORD.INTERFACE_NAME, value.toArray(new String[value.size()]));
        }
        public List<InterfaceRecordPO> fetchByRequest(Collection<String> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.InterfaceRecord.INTERFACE_RECORD.REQUEST, value.toArray(new String[value.size()]));
        }
        public List<InterfaceRecordPO> fetchByResponse(Collection<String> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.InterfaceRecord.INTERFACE_RECORD.RESPONSE, value.toArray(new String[value.size()]));
        }
        public List<InterfaceRecordPO> fetchByCreatedAt(Collection<OffsetDateTime> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.InterfaceRecord.INTERFACE_RECORD.CREATED_AT, value.toArray(new OffsetDateTime[value.size()]));
        }
}
