/*
 * This file is generated by jOOQ.
 */
package cn.yxtreme.jooq.jooq.tables.daos;


import cn.yxtreme.jooq.jooq.tables.MedicineOrder;
import cn.yxtreme.jooq.jooq.tables.pojos.MedicineOrderPO;
import cn.yxtreme.jooq.jooq.tables.records.MedicineOrderRecord;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Collection;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * 订单表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MedicineOrderDao extends DAOImpl<MedicineOrderRecord, MedicineOrderPO, Long> {

    /**
     * Create a new MedicineOrderDao without any configuration
     */
    public MedicineOrderDao() {
        super(MedicineOrder.MEDICINE_ORDER, MedicineOrderPO.class);
    }

    /**
     * Create a new MedicineOrderDao with an attached configuration
     */
    public MedicineOrderDao(Configuration configuration) {
        super(MedicineOrder.MEDICINE_ORDER, MedicineOrderPO.class, configuration);
    }

    @Override
    public Long getId(MedicineOrderPO object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<MedicineOrderPO> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(MedicineOrder.MEDICINE_ORDER.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<MedicineOrderPO> fetchById(Long... values) {
        return fetch(MedicineOrder.MEDICINE_ORDER.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public MedicineOrderPO fetchOneById(Long value) {
        return fetchOne(MedicineOrder.MEDICINE_ORDER.ID, value);
    }

    /**
     * Fetch records that have <code>created_time BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<MedicineOrderPO> fetchRangeOfCreatedTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(MedicineOrder.MEDICINE_ORDER.CREATED_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_time IN (values)</code>
     */
    public List<MedicineOrderPO> fetchByCreatedTime(LocalDateTime... values) {
        return fetch(MedicineOrder.MEDICINE_ORDER.CREATED_TIME, values);
    }

    /**
     * Fetch records that have <code>updated_time BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<MedicineOrderPO> fetchRangeOfUpdatedTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(MedicineOrder.MEDICINE_ORDER.UPDATED_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_time IN (values)</code>
     */
    public List<MedicineOrderPO> fetchByUpdatedTime(LocalDateTime... values) {
        return fetch(MedicineOrder.MEDICINE_ORDER.UPDATED_TIME, values);
    }

    /**
     * Fetch records that have <code>order_status BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<MedicineOrderPO> fetchRangeOfOrderStatus(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(MedicineOrder.MEDICINE_ORDER.ORDER_STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>order_status IN (values)</code>
     */
    public List<MedicineOrderPO> fetchByOrderStatus(Integer... values) {
        return fetch(MedicineOrder.MEDICINE_ORDER.ORDER_STATUS, values);
    }

    /**
     * Fetch records that have <code>third_order_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<MedicineOrderPO> fetchRangeOfThirdOrderId(String lowerInclusive, String upperInclusive) {
        return fetchRange(MedicineOrder.MEDICINE_ORDER.THIRD_ORDER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>third_order_id IN (values)</code>
     */
    public List<MedicineOrderPO> fetchByThirdOrderId(String... values) {
        return fetch(MedicineOrder.MEDICINE_ORDER.THIRD_ORDER_ID, values);
    }

    /**
     * Fetch records that have <code>third_business BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<MedicineOrderPO> fetchRangeOfThirdBusiness(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(MedicineOrder.MEDICINE_ORDER.THIRD_BUSINESS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>third_business IN (values)</code>
     */
    public List<MedicineOrderPO> fetchByThirdBusiness(Integer... values) {
        return fetch(MedicineOrder.MEDICINE_ORDER.THIRD_BUSINESS, values);
    }

    /**
     * Fetch records that have <code>total_price BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<MedicineOrderPO> fetchRangeOfTotalPrice(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(MedicineOrder.MEDICINE_ORDER.TOTAL_PRICE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>total_price IN (values)</code>
     */
    public List<MedicineOrderPO> fetchByTotalPrice(Long... values) {
        return fetch(MedicineOrder.MEDICINE_ORDER.TOTAL_PRICE, values);
    }

    /**
     * Fetch records that have <code>deduction_ammount BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<MedicineOrderPO> fetchRangeOfDeductionAmmount(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(MedicineOrder.MEDICINE_ORDER.DEDUCTION_AMMOUNT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>deduction_ammount IN (values)</code>
     */
    public List<MedicineOrderPO> fetchByDeductionAmmount(Long... values) {
        return fetch(MedicineOrder.MEDICINE_ORDER.DEDUCTION_AMMOUNT, values);
    }

    /**
     * Fetch records that have <code>deliver_pay BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<MedicineOrderPO> fetchRangeOfDeliverPay(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(MedicineOrder.MEDICINE_ORDER.DELIVER_PAY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>deliver_pay IN (values)</code>
     */
    public List<MedicineOrderPO> fetchByDeliverPay(Long... values) {
        return fetch(MedicineOrder.MEDICINE_ORDER.DELIVER_PAY, values);
    }

    /**
     * Fetch records that have <code>had_pay BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<MedicineOrderPO> fetchRangeOfHadPay(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(MedicineOrder.MEDICINE_ORDER.HAD_PAY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>had_pay IN (values)</code>
     */
    public List<MedicineOrderPO> fetchByHadPay(Long... values) {
        return fetch(MedicineOrder.MEDICINE_ORDER.HAD_PAY, values);
    }

    /**
     * Fetch records that have <code>latitude BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<MedicineOrderPO> fetchRangeOfLatitude(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(MedicineOrder.MEDICINE_ORDER.LATITUDE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>latitude IN (values)</code>
     */
    public List<MedicineOrderPO> fetchByLatitude(BigDecimal... values) {
        return fetch(MedicineOrder.MEDICINE_ORDER.LATITUDE, values);
    }

    /**
     * Fetch records that have <code>longitude BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<MedicineOrderPO> fetchRangeOfLongitude(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(MedicineOrder.MEDICINE_ORDER.LONGITUDE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>longitude IN (values)</code>
     */
    public List<MedicineOrderPO> fetchByLongitude(BigDecimal... values) {
        return fetch(MedicineOrder.MEDICINE_ORDER.LONGITUDE, values);
    }

    /**
     * Fetch records that have <code>rights BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<MedicineOrderPO> fetchRangeOfRights(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(MedicineOrder.MEDICINE_ORDER.RIGHTS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>rights IN (values)</code>
     */
    public List<MedicineOrderPO> fetchByRights(Boolean... values) {
        return fetch(MedicineOrder.MEDICINE_ORDER.RIGHTS, values);
    }

    /**
     * Fetch records that have <code>rights_use_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<MedicineOrderPO> fetchRangeOfRightsUseId(String lowerInclusive, String upperInclusive) {
        return fetchRange(MedicineOrder.MEDICINE_ORDER.RIGHTS_USE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>rights_use_id IN (values)</code>
     */
    public List<MedicineOrderPO> fetchByRightsUseId(String... values) {
        return fetch(MedicineOrder.MEDICINE_ORDER.RIGHTS_USE_ID, values);
    }

    /**
     * Fetch records that have <code>rights_commit BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<MedicineOrderPO> fetchRangeOfRightsCommit(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(MedicineOrder.MEDICINE_ORDER.RIGHTS_COMMIT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>rights_commit IN (values)</code>
     */
    public List<MedicineOrderPO> fetchByRightsCommit(Boolean... values) {
        return fetch(MedicineOrder.MEDICINE_ORDER.RIGHTS_COMMIT, values);
    }

    /**
     * Fetch records that have <code>rights_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<MedicineOrderPO> fetchRangeOfRightsId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(MedicineOrder.MEDICINE_ORDER.RIGHTS_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>rights_id IN (values)</code>
     */
    public List<MedicineOrderPO> fetchByRightsId(Long... values) {
        return fetch(MedicineOrder.MEDICINE_ORDER.RIGHTS_ID, values);
    }

    /**
     * Fetch records that have <code>deliver_discount BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<MedicineOrderPO> fetchRangeOfDeliverDiscount(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(MedicineOrder.MEDICINE_ORDER.DELIVER_DISCOUNT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>deliver_discount IN (values)</code>
     */
    public List<MedicineOrderPO> fetchByDeliverDiscount(Long... values) {
        return fetch(MedicineOrder.MEDICINE_ORDER.DELIVER_DISCOUNT, values);
    }

    /**
     * Fetch records that have <code>abandoned_reason BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<MedicineOrderPO> fetchRangeOfAbandonedReason(String lowerInclusive, String upperInclusive) {
        return fetchRange(MedicineOrder.MEDICINE_ORDER.ABANDONED_REASON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>abandoned_reason IN (values)</code>
     */
    public List<MedicineOrderPO> fetchByAbandonedReason(String... values) {
        return fetch(MedicineOrder.MEDICINE_ORDER.ABANDONED_REASON, values);
    }

    /**
     * Fetch records that have <code>total_original_price BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<MedicineOrderPO> fetchRangeOfTotalOriginalPrice(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(MedicineOrder.MEDICINE_ORDER.TOTAL_ORIGINAL_PRICE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>total_original_price IN (values)</code>
     */
    public List<MedicineOrderPO> fetchByTotalOriginalPrice(Long... values) {
        return fetch(MedicineOrder.MEDICINE_ORDER.TOTAL_ORIGINAL_PRICE, values);
    }

    /**
     * Fetch records that have <code>order_no BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<MedicineOrderPO> fetchRangeOfOrderNo(String lowerInclusive, String upperInclusive) {
        return fetchRange(MedicineOrder.MEDICINE_ORDER.ORDER_NO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>order_no IN (values)</code>
     */
    public List<MedicineOrderPO> fetchByOrderNo(String... values) {
        return fetch(MedicineOrder.MEDICINE_ORDER.ORDER_NO, values);
    }
        public List<MedicineOrderPO> fetchById(Collection<Long> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.MedicineOrder.MEDICINE_ORDER.ID, value.toArray(new Long[value.size()]));
        }
        public List<MedicineOrderPO> fetchByCreatedTime(Collection<LocalDateTime> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.MedicineOrder.MEDICINE_ORDER.CREATED_TIME, value.toArray(new LocalDateTime[value.size()]));
        }
        public List<MedicineOrderPO> fetchByUpdatedTime(Collection<LocalDateTime> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.MedicineOrder.MEDICINE_ORDER.UPDATED_TIME, value.toArray(new LocalDateTime[value.size()]));
        }
        public List<MedicineOrderPO> fetchByOrderStatus(Collection<Integer> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.MedicineOrder.MEDICINE_ORDER.ORDER_STATUS, value.toArray(new Integer[value.size()]));
        }
        public List<MedicineOrderPO> fetchByThirdOrderId(Collection<String> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.MedicineOrder.MEDICINE_ORDER.THIRD_ORDER_ID, value.toArray(new String[value.size()]));
        }
        public List<MedicineOrderPO> fetchByThirdBusiness(Collection<Integer> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.MedicineOrder.MEDICINE_ORDER.THIRD_BUSINESS, value.toArray(new Integer[value.size()]));
        }
        public List<MedicineOrderPO> fetchByTotalPrice(Collection<Long> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.MedicineOrder.MEDICINE_ORDER.TOTAL_PRICE, value.toArray(new Long[value.size()]));
        }
        public List<MedicineOrderPO> fetchByDeductionAmmount(Collection<Long> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.MedicineOrder.MEDICINE_ORDER.DEDUCTION_AMMOUNT, value.toArray(new Long[value.size()]));
        }
        public List<MedicineOrderPO> fetchByDeliverPay(Collection<Long> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.MedicineOrder.MEDICINE_ORDER.DELIVER_PAY, value.toArray(new Long[value.size()]));
        }
        public List<MedicineOrderPO> fetchByHadPay(Collection<Long> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.MedicineOrder.MEDICINE_ORDER.HAD_PAY, value.toArray(new Long[value.size()]));
        }
        public List<MedicineOrderPO> fetchByLatitude(Collection<BigDecimal> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.MedicineOrder.MEDICINE_ORDER.LATITUDE, value.toArray(new BigDecimal[value.size()]));
        }
        public List<MedicineOrderPO> fetchByLongitude(Collection<BigDecimal> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.MedicineOrder.MEDICINE_ORDER.LONGITUDE, value.toArray(new BigDecimal[value.size()]));
        }
        public List<MedicineOrderPO> fetchByRights(Collection<Boolean> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.MedicineOrder.MEDICINE_ORDER.RIGHTS, value.toArray(new Boolean[value.size()]));
        }
        public List<MedicineOrderPO> fetchByRightsUseId(Collection<String> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.MedicineOrder.MEDICINE_ORDER.RIGHTS_USE_ID, value.toArray(new String[value.size()]));
        }
        public List<MedicineOrderPO> fetchByRightsCommit(Collection<Boolean> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.MedicineOrder.MEDICINE_ORDER.RIGHTS_COMMIT, value.toArray(new Boolean[value.size()]));
        }
        public List<MedicineOrderPO> fetchByRightsId(Collection<Long> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.MedicineOrder.MEDICINE_ORDER.RIGHTS_ID, value.toArray(new Long[value.size()]));
        }
        public List<MedicineOrderPO> fetchByDeliverDiscount(Collection<Long> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.MedicineOrder.MEDICINE_ORDER.DELIVER_DISCOUNT, value.toArray(new Long[value.size()]));
        }
        public List<MedicineOrderPO> fetchByAbandonedReason(Collection<String> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.MedicineOrder.MEDICINE_ORDER.ABANDONED_REASON, value.toArray(new String[value.size()]));
        }
        public List<MedicineOrderPO> fetchByTotalOriginalPrice(Collection<Long> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.MedicineOrder.MEDICINE_ORDER.TOTAL_ORIGINAL_PRICE, value.toArray(new Long[value.size()]));
        }
        public List<MedicineOrderPO> fetchByOrderNo(Collection<String> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.MedicineOrder.MEDICINE_ORDER.ORDER_NO, value.toArray(new String[value.size()]));
        }
}
