/*
 * This file is generated by jOOQ.
 */
package cn.yxtreme.jooq.jooq.tables.daos;


import cn.yxtreme.jooq.jooq.tables.OrderV2;
import cn.yxtreme.jooq.jooq.tables.pojos.OrderV2PO;
import cn.yxtreme.jooq.jooq.tables.records.OrderV2Record;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Collection;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * 订单表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrderV2Dao extends DAOImpl<OrderV2Record, OrderV2PO, Long> {

    /**
     * Create a new OrderV2Dao without any configuration
     */
    public OrderV2Dao() {
        super(OrderV2.ORDER_V2, OrderV2PO.class);
    }

    /**
     * Create a new OrderV2Dao with an attached configuration
     */
    public OrderV2Dao(Configuration configuration) {
        super(OrderV2.ORDER_V2, OrderV2PO.class, configuration);
    }

    @Override
    public Long getId(OrderV2PO object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderV2PO> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(OrderV2.ORDER_V2.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<OrderV2PO> fetchById(Long... values) {
        return fetch(OrderV2.ORDER_V2.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public OrderV2PO fetchOneById(Long value) {
        return fetchOne(OrderV2.ORDER_V2.ID, value);
    }

    /**
     * Fetch records that have <code>created_time BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderV2PO> fetchRangeOfCreatedTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(OrderV2.ORDER_V2.CREATED_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_time IN (values)</code>
     */
    public List<OrderV2PO> fetchByCreatedTime(LocalDateTime... values) {
        return fetch(OrderV2.ORDER_V2.CREATED_TIME, values);
    }

    /**
     * Fetch records that have <code>updated_time BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderV2PO> fetchRangeOfUpdatedTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(OrderV2.ORDER_V2.UPDATED_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_time IN (values)</code>
     */
    public List<OrderV2PO> fetchByUpdatedTime(LocalDateTime... values) {
        return fetch(OrderV2.ORDER_V2.UPDATED_TIME, values);
    }

    /**
     * Fetch records that have <code>order_status BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderV2PO> fetchRangeOfOrderStatus(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(OrderV2.ORDER_V2.ORDER_STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>order_status IN (values)</code>
     */
    public List<OrderV2PO> fetchByOrderStatus(Integer... values) {
        return fetch(OrderV2.ORDER_V2.ORDER_STATUS, values);
    }

    /**
     * Fetch records that have <code>third_order_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderV2PO> fetchRangeOfThirdOrderId(String lowerInclusive, String upperInclusive) {
        return fetchRange(OrderV2.ORDER_V2.THIRD_ORDER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>third_order_id IN (values)</code>
     */
    public List<OrderV2PO> fetchByThirdOrderId(String... values) {
        return fetch(OrderV2.ORDER_V2.THIRD_ORDER_ID, values);
    }

    /**
     * Fetch records that have <code>third_business BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderV2PO> fetchRangeOfThirdBusiness(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(OrderV2.ORDER_V2.THIRD_BUSINESS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>third_business IN (values)</code>
     */
    public List<OrderV2PO> fetchByThirdBusiness(Integer... values) {
        return fetch(OrderV2.ORDER_V2.THIRD_BUSINESS, values);
    }

    /**
     * Fetch records that have <code>total_price BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderV2PO> fetchRangeOfTotalPrice(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(OrderV2.ORDER_V2.TOTAL_PRICE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>total_price IN (values)</code>
     */
    public List<OrderV2PO> fetchByTotalPrice(Long... values) {
        return fetch(OrderV2.ORDER_V2.TOTAL_PRICE, values);
    }

    /**
     * Fetch records that have <code>total_pay BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderV2PO> fetchRangeOfTotalPay(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(OrderV2.ORDER_V2.TOTAL_PAY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>total_pay IN (values)</code>
     */
    public List<OrderV2PO> fetchByTotalPay(Long... values) {
        return fetch(OrderV2.ORDER_V2.TOTAL_PAY, values);
    }

    /**
     * Fetch records that have <code>deduction_ammount BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<OrderV2PO> fetchRangeOfDeductionAmmount(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(OrderV2.ORDER_V2.DEDUCTION_AMMOUNT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>deduction_ammount IN (values)</code>
     */
    public List<OrderV2PO> fetchByDeductionAmmount(Long... values) {
        return fetch(OrderV2.ORDER_V2.DEDUCTION_AMMOUNT, values);
    }

    /**
     * Fetch records that have <code>deliver_pay BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderV2PO> fetchRangeOfDeliverPay(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(OrderV2.ORDER_V2.DELIVER_PAY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>deliver_pay IN (values)</code>
     */
    public List<OrderV2PO> fetchByDeliverPay(Long... values) {
        return fetch(OrderV2.ORDER_V2.DELIVER_PAY, values);
    }

    /**
     * Fetch records that have <code>pay_time BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderV2PO> fetchRangeOfPayTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(OrderV2.ORDER_V2.PAY_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>pay_time IN (values)</code>
     */
    public List<OrderV2PO> fetchByPayTime(LocalDateTime... values) {
        return fetch(OrderV2.ORDER_V2.PAY_TIME, values);
    }

    /**
     * Fetch records that have <code>init_time BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderV2PO> fetchRangeOfInitTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(OrderV2.ORDER_V2.INIT_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>init_time IN (values)</code>
     */
    public List<OrderV2PO> fetchByInitTime(LocalDateTime... values) {
        return fetch(OrderV2.ORDER_V2.INIT_TIME, values);
    }

    /**
     * Fetch records that have <code>commit_time BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderV2PO> fetchRangeOfCommitTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(OrderV2.ORDER_V2.COMMIT_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>commit_time IN (values)</code>
     */
    public List<OrderV2PO> fetchByCommitTime(LocalDateTime... values) {
        return fetch(OrderV2.ORDER_V2.COMMIT_TIME, values);
    }

    /**
     * Fetch records that have <code>cancel_time BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderV2PO> fetchRangeOfCancelTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(OrderV2.ORDER_V2.CANCEL_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>cancel_time IN (values)</code>
     */
    public List<OrderV2PO> fetchByCancelTime(LocalDateTime... values) {
        return fetch(OrderV2.ORDER_V2.CANCEL_TIME, values);
    }

    /**
     * Fetch records that have <code>refund_time BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderV2PO> fetchRangeOfRefundTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(OrderV2.ORDER_V2.REFUND_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>refund_time IN (values)</code>
     */
    public List<OrderV2PO> fetchByRefundTime(LocalDateTime... values) {
        return fetch(OrderV2.ORDER_V2.REFUND_TIME, values);
    }

    /**
     * Fetch records that have <code>had_pay BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderV2PO> fetchRangeOfHadPay(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(OrderV2.ORDER_V2.HAD_PAY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>had_pay IN (values)</code>
     */
    public List<OrderV2PO> fetchByHadPay(Long... values) {
        return fetch(OrderV2.ORDER_V2.HAD_PAY, values);
    }

    /**
     * Fetch records that have <code>latitude BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderV2PO> fetchRangeOfLatitude(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(OrderV2.ORDER_V2.LATITUDE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>latitude IN (values)</code>
     */
    public List<OrderV2PO> fetchByLatitude(BigDecimal... values) {
        return fetch(OrderV2.ORDER_V2.LATITUDE, values);
    }

    /**
     * Fetch records that have <code>longitude BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderV2PO> fetchRangeOfLongitude(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(OrderV2.ORDER_V2.LONGITUDE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>longitude IN (values)</code>
     */
    public List<OrderV2PO> fetchByLongitude(BigDecimal... values) {
        return fetch(OrderV2.ORDER_V2.LONGITUDE, values);
    }

    /**
     * Fetch records that have <code>rights BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderV2PO> fetchRangeOfRights(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(OrderV2.ORDER_V2.RIGHTS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>rights IN (values)</code>
     */
    public List<OrderV2PO> fetchByRights(Boolean... values) {
        return fetch(OrderV2.ORDER_V2.RIGHTS, values);
    }

    /**
     * Fetch records that have <code>rights_use_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderV2PO> fetchRangeOfRightsUseId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(OrderV2.ORDER_V2.RIGHTS_USE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>rights_use_id IN (values)</code>
     */
    public List<OrderV2PO> fetchByRightsUseId(Long... values) {
        return fetch(OrderV2.ORDER_V2.RIGHTS_USE_ID, values);
    }

    /**
     * Fetch records that have <code>delivered_time BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderV2PO> fetchRangeOfDeliveredTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(OrderV2.ORDER_V2.DELIVERED_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>delivered_time IN (values)</code>
     */
    public List<OrderV2PO> fetchByDeliveredTime(LocalDateTime... values) {
        return fetch(OrderV2.ORDER_V2.DELIVERED_TIME, values);
    }

    /**
     * Fetch records that have <code>rights_commit BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderV2PO> fetchRangeOfRightsCommit(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(OrderV2.ORDER_V2.RIGHTS_COMMIT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>rights_commit IN (values)</code>
     */
    public List<OrderV2PO> fetchByRightsCommit(Boolean... values) {
        return fetch(OrderV2.ORDER_V2.RIGHTS_COMMIT, values);
    }

    /**
     * Fetch records that have <code>rights_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderV2PO> fetchRangeOfRightsId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(OrderV2.ORDER_V2.RIGHTS_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>rights_id IN (values)</code>
     */
    public List<OrderV2PO> fetchByRightsId(Long... values) {
        return fetch(OrderV2.ORDER_V2.RIGHTS_ID, values);
    }

    /**
     * Fetch records that have <code>lg_province BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderV2PO> fetchRangeOfLgProvince(String lowerInclusive, String upperInclusive) {
        return fetchRange(OrderV2.ORDER_V2.LG_PROVINCE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>lg_province IN (values)</code>
     */
    public List<OrderV2PO> fetchByLgProvince(String... values) {
        return fetch(OrderV2.ORDER_V2.LG_PROVINCE, values);
    }

    /**
     * Fetch records that have <code>lg_province_code BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderV2PO> fetchRangeOfLgProvinceCode(String lowerInclusive, String upperInclusive) {
        return fetchRange(OrderV2.ORDER_V2.LG_PROVINCE_CODE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>lg_province_code IN (values)</code>
     */
    public List<OrderV2PO> fetchByLgProvinceCode(String... values) {
        return fetch(OrderV2.ORDER_V2.LG_PROVINCE_CODE, values);
    }

    /**
     * Fetch records that have <code>lg_city BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderV2PO> fetchRangeOfLgCity(String lowerInclusive, String upperInclusive) {
        return fetchRange(OrderV2.ORDER_V2.LG_CITY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>lg_city IN (values)</code>
     */
    public List<OrderV2PO> fetchByLgCity(String... values) {
        return fetch(OrderV2.ORDER_V2.LG_CITY, values);
    }

    /**
     * Fetch records that have <code>lg_city_code BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderV2PO> fetchRangeOfLgCityCode(String lowerInclusive, String upperInclusive) {
        return fetchRange(OrderV2.ORDER_V2.LG_CITY_CODE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>lg_city_code IN (values)</code>
     */
    public List<OrderV2PO> fetchByLgCityCode(String... values) {
        return fetch(OrderV2.ORDER_V2.LG_CITY_CODE, values);
    }

    /**
     * Fetch records that have <code>lg_area BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderV2PO> fetchRangeOfLgArea(String lowerInclusive, String upperInclusive) {
        return fetchRange(OrderV2.ORDER_V2.LG_AREA, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>lg_area IN (values)</code>
     */
    public List<OrderV2PO> fetchByLgArea(String... values) {
        return fetch(OrderV2.ORDER_V2.LG_AREA, values);
    }

    /**
     * Fetch records that have <code>lg_area_code BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderV2PO> fetchRangeOfLgAreaCode(String lowerInclusive, String upperInclusive) {
        return fetchRange(OrderV2.ORDER_V2.LG_AREA_CODE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>lg_area_code IN (values)</code>
     */
    public List<OrderV2PO> fetchByLgAreaCode(String... values) {
        return fetch(OrderV2.ORDER_V2.LG_AREA_CODE, values);
    }

    /**
     * Fetch records that have <code>lg_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderV2PO> fetchRangeOfLgName(String lowerInclusive, String upperInclusive) {
        return fetchRange(OrderV2.ORDER_V2.LG_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>lg_name IN (values)</code>
     */
    public List<OrderV2PO> fetchByLgName(String... values) {
        return fetch(OrderV2.ORDER_V2.LG_NAME, values);
    }

    /**
     * Fetch records that have <code>lg_phone BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderV2PO> fetchRangeOfLgPhone(String lowerInclusive, String upperInclusive) {
        return fetchRange(OrderV2.ORDER_V2.LG_PHONE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>lg_phone IN (values)</code>
     */
    public List<OrderV2PO> fetchByLgPhone(String... values) {
        return fetch(OrderV2.ORDER_V2.LG_PHONE, values);
    }

    /**
     * Fetch records that have <code>lg_address BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderV2PO> fetchRangeOfLgAddress(String lowerInclusive, String upperInclusive) {
        return fetchRange(OrderV2.ORDER_V2.LG_ADDRESS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>lg_address IN (values)</code>
     */
    public List<OrderV2PO> fetchByLgAddress(String... values) {
        return fetch(OrderV2.ORDER_V2.LG_ADDRESS, values);
    }
        public List<OrderV2PO> fetchById(Collection<Long> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.OrderV2.ORDER_V2.ID, value.toArray(new Long[value.size()]));
        }
        public List<OrderV2PO> fetchByCreatedTime(Collection<LocalDateTime> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.OrderV2.ORDER_V2.CREATED_TIME, value.toArray(new LocalDateTime[value.size()]));
        }
        public List<OrderV2PO> fetchByUpdatedTime(Collection<LocalDateTime> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.OrderV2.ORDER_V2.UPDATED_TIME, value.toArray(new LocalDateTime[value.size()]));
        }
        public List<OrderV2PO> fetchByOrderStatus(Collection<Integer> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.OrderV2.ORDER_V2.ORDER_STATUS, value.toArray(new Integer[value.size()]));
        }
        public List<OrderV2PO> fetchByThirdOrderId(Collection<String> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.OrderV2.ORDER_V2.THIRD_ORDER_ID, value.toArray(new String[value.size()]));
        }
        public List<OrderV2PO> fetchByThirdBusiness(Collection<Integer> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.OrderV2.ORDER_V2.THIRD_BUSINESS, value.toArray(new Integer[value.size()]));
        }
        public List<OrderV2PO> fetchByTotalPrice(Collection<Long> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.OrderV2.ORDER_V2.TOTAL_PRICE, value.toArray(new Long[value.size()]));
        }
        public List<OrderV2PO> fetchByTotalPay(Collection<Long> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.OrderV2.ORDER_V2.TOTAL_PAY, value.toArray(new Long[value.size()]));
        }
        public List<OrderV2PO> fetchByDeductionAmmount(Collection<Long> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.OrderV2.ORDER_V2.DEDUCTION_AMMOUNT, value.toArray(new Long[value.size()]));
        }
        public List<OrderV2PO> fetchByDeliverPay(Collection<Long> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.OrderV2.ORDER_V2.DELIVER_PAY, value.toArray(new Long[value.size()]));
        }
        public List<OrderV2PO> fetchByPayTime(Collection<LocalDateTime> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.OrderV2.ORDER_V2.PAY_TIME, value.toArray(new LocalDateTime[value.size()]));
        }
        public List<OrderV2PO> fetchByInitTime(Collection<LocalDateTime> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.OrderV2.ORDER_V2.INIT_TIME, value.toArray(new LocalDateTime[value.size()]));
        }
        public List<OrderV2PO> fetchByCommitTime(Collection<LocalDateTime> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.OrderV2.ORDER_V2.COMMIT_TIME, value.toArray(new LocalDateTime[value.size()]));
        }
        public List<OrderV2PO> fetchByCancelTime(Collection<LocalDateTime> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.OrderV2.ORDER_V2.CANCEL_TIME, value.toArray(new LocalDateTime[value.size()]));
        }
        public List<OrderV2PO> fetchByRefundTime(Collection<LocalDateTime> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.OrderV2.ORDER_V2.REFUND_TIME, value.toArray(new LocalDateTime[value.size()]));
        }
        public List<OrderV2PO> fetchByHadPay(Collection<Long> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.OrderV2.ORDER_V2.HAD_PAY, value.toArray(new Long[value.size()]));
        }
        public List<OrderV2PO> fetchByLatitude(Collection<BigDecimal> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.OrderV2.ORDER_V2.LATITUDE, value.toArray(new BigDecimal[value.size()]));
        }
        public List<OrderV2PO> fetchByLongitude(Collection<BigDecimal> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.OrderV2.ORDER_V2.LONGITUDE, value.toArray(new BigDecimal[value.size()]));
        }
        public List<OrderV2PO> fetchByRights(Collection<Boolean> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.OrderV2.ORDER_V2.RIGHTS, value.toArray(new Boolean[value.size()]));
        }
        public List<OrderV2PO> fetchByRightsUseId(Collection<Long> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.OrderV2.ORDER_V2.RIGHTS_USE_ID, value.toArray(new Long[value.size()]));
        }
        public List<OrderV2PO> fetchByDeliveredTime(Collection<LocalDateTime> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.OrderV2.ORDER_V2.DELIVERED_TIME, value.toArray(new LocalDateTime[value.size()]));
        }
        public List<OrderV2PO> fetchByRightsCommit(Collection<Boolean> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.OrderV2.ORDER_V2.RIGHTS_COMMIT, value.toArray(new Boolean[value.size()]));
        }
        public List<OrderV2PO> fetchByRightsId(Collection<Long> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.OrderV2.ORDER_V2.RIGHTS_ID, value.toArray(new Long[value.size()]));
        }
        public List<OrderV2PO> fetchByLgProvince(Collection<String> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.OrderV2.ORDER_V2.LG_PROVINCE, value.toArray(new String[value.size()]));
        }
        public List<OrderV2PO> fetchByLgProvinceCode(Collection<String> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.OrderV2.ORDER_V2.LG_PROVINCE_CODE, value.toArray(new String[value.size()]));
        }
        public List<OrderV2PO> fetchByLgCity(Collection<String> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.OrderV2.ORDER_V2.LG_CITY, value.toArray(new String[value.size()]));
        }
        public List<OrderV2PO> fetchByLgCityCode(Collection<String> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.OrderV2.ORDER_V2.LG_CITY_CODE, value.toArray(new String[value.size()]));
        }
        public List<OrderV2PO> fetchByLgArea(Collection<String> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.OrderV2.ORDER_V2.LG_AREA, value.toArray(new String[value.size()]));
        }
        public List<OrderV2PO> fetchByLgAreaCode(Collection<String> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.OrderV2.ORDER_V2.LG_AREA_CODE, value.toArray(new String[value.size()]));
        }
        public List<OrderV2PO> fetchByLgName(Collection<String> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.OrderV2.ORDER_V2.LG_NAME, value.toArray(new String[value.size()]));
        }
        public List<OrderV2PO> fetchByLgPhone(Collection<String> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.OrderV2.ORDER_V2.LG_PHONE, value.toArray(new String[value.size()]));
        }
        public List<OrderV2PO> fetchByLgAddress(Collection<String> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.OrderV2.ORDER_V2.LG_ADDRESS, value.toArray(new String[value.size()]));
        }
}
