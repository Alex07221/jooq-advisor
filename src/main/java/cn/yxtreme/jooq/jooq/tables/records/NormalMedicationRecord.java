/*
 * This file is generated by jOOQ.
 */
package cn.yxtreme.jooq.jooq.tables.records;


import cn.yxtreme.jooq.jooq.tables.NormalMedication;
import cn.yxtreme.jooq.jooq.tables.pojos.NormalMedicationPO;

import java.math.BigDecimal;
import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record18;
import org.jooq.Row18;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 标准方
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NormalMedicationRecord extends UpdatableRecordImpl<NormalMedicationRecord> implements Record18<Long, String, Long, Long, Long, Long, Long, Long, BigDecimal, BigDecimal, String, Long, Long, String, String, LocalDateTime, LocalDateTime, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.normal_medication.id</code>. 主键id
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.normal_medication.id</code>. 主键id
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.normal_medication.name</code>. 标准方名称
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.normal_medication.name</code>. 标准方名称
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.normal_medication.version</code>. 版本号
     */
    public void setVersion(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.normal_medication.version</code>. 版本号
     */
    public Long getVersion() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.normal_medication.dosage</code>. 用量
     */
    public void setDosage(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.normal_medication.dosage</code>. 用量
     */
    public Long getDosage() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>public.normal_medication.rate</code>. 用药频率
     */
    public void setRate(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.normal_medication.rate</code>. 用药频率
     */
    public Long getRate() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>public.normal_medication.processing_methods</code>. 加工方式
     * 
     * 1 :颗粒剂
     */
    public void setProcessingMethods(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.normal_medication.processing_methods</code>. 加工方式
     * 
     * 1 :颗粒剂
     */
    public Long getProcessingMethods() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>public.normal_medication.usage</code>. 常规用法1: 水冲
     */
    public void setUsage(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.normal_medication.usage</code>. 常规用法1: 水冲
     */
    public Long getUsage() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>public.normal_medication.usage_unit</code>. 常规用量单位
     * 1：包
     * 2：副
     */
    public void setUsageUnit(Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.normal_medication.usage_unit</code>. 常规用量单位
     * 1：包
     * 2：副
     */
    public Long getUsageUnit() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>public.normal_medication.settlement_price</code>. 结算价
     */
    public void setSettlementPrice(BigDecimal value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.normal_medication.settlement_price</code>. 结算价
     */
    public BigDecimal getSettlementPrice() {
        return (BigDecimal) get(8);
    }

    /**
     * Setter for <code>public.normal_medication.sell_price</code>. 零售价
     */
    public void setSellPrice(BigDecimal value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.normal_medication.sell_price</code>. 零售价
     */
    public BigDecimal getSellPrice() {
        return (BigDecimal) get(9);
    }

    /**
     * Setter for <code>public.normal_medication.remark</code>. 备注
     */
    public void setRemark(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.normal_medication.remark</code>. 备注
     */
    public String getRemark() {
        return (String) get(10);
    }

    /**
     * Setter for <code>public.normal_medication.created_user_id</code>. 创建人id
     * 同理 如果是更新操作取最初创始人的id
     */
    public void setCreatedUserId(Long value) {
        set(11, value);
    }

    /**
     * Getter for <code>public.normal_medication.created_user_id</code>. 创建人id
     * 同理 如果是更新操作取最初创始人的id
     */
    public Long getCreatedUserId() {
        return (Long) get(11);
    }

    /**
     * Setter for <code>public.normal_medication.updated_user_id</code>. 更新人id
     */
    public void setUpdatedUserId(Long value) {
        set(12, value);
    }

    /**
     * Getter for <code>public.normal_medication.updated_user_id</code>. 更新人id
     */
    public Long getUpdatedUserId() {
        return (Long) get(12);
    }

    /**
     * Setter for <code>public.normal_medication.created_user</code>. 创建人用户名
     */
    public void setCreatedUser(String value) {
        set(13, value);
    }

    /**
     * Getter for <code>public.normal_medication.created_user</code>. 创建人用户名
     */
    public String getCreatedUser() {
        return (String) get(13);
    }

    /**
     * Setter for <code>public.normal_medication.updated_user</code>. 更新人用户名
     */
    public void setUpdatedUser(String value) {
        set(14, value);
    }

    /**
     * Getter for <code>public.normal_medication.updated_user</code>. 更新人用户名
     */
    public String getUpdatedUser() {
        return (String) get(14);
    }

    /**
     * Setter for <code>public.normal_medication.created_at</code>. 创建时间
     * 同理 如果是更新操作取最初的创建时间
     */
    public void setCreatedAt(LocalDateTime value) {
        set(15, value);
    }

    /**
     * Getter for <code>public.normal_medication.created_at</code>. 创建时间
     * 同理 如果是更新操作取最初的创建时间
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(15);
    }

    /**
     * Setter for <code>public.normal_medication.updated_at</code>. 更新时间
     * 同理 如果是更新操作取最初创建时间
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(16, value);
    }

    /**
     * Getter for <code>public.normal_medication.updated_at</code>. 更新时间
     * 同理 如果是更新操作取最初创建时间
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(16);
    }

    /**
     * Setter for <code>public.normal_medication.status</code>. 1:上架2:下架
     */
    public void setStatus(Integer value) {
        set(17, value);
    }

    /**
     * Getter for <code>public.normal_medication.status</code>. 1:上架2:下架
     */
    public Integer getStatus() {
        return (Integer) get(17);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record18 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row18<Long, String, Long, Long, Long, Long, Long, Long, BigDecimal, BigDecimal, String, Long, Long, String, String, LocalDateTime, LocalDateTime, Integer> fieldsRow() {
        return (Row18) super.fieldsRow();
    }

    @Override
    public Row18<Long, String, Long, Long, Long, Long, Long, Long, BigDecimal, BigDecimal, String, Long, Long, String, String, LocalDateTime, LocalDateTime, Integer> valuesRow() {
        return (Row18) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return NormalMedication.NORMAL_MEDICATION.ID;
    }

    @Override
    public Field<String> field2() {
        return NormalMedication.NORMAL_MEDICATION.NAME;
    }

    @Override
    public Field<Long> field3() {
        return NormalMedication.NORMAL_MEDICATION.VERSION;
    }

    @Override
    public Field<Long> field4() {
        return NormalMedication.NORMAL_MEDICATION.DOSAGE;
    }

    @Override
    public Field<Long> field5() {
        return NormalMedication.NORMAL_MEDICATION.RATE;
    }

    @Override
    public Field<Long> field6() {
        return NormalMedication.NORMAL_MEDICATION.PROCESSING_METHODS;
    }

    @Override
    public Field<Long> field7() {
        return NormalMedication.NORMAL_MEDICATION.USAGE;
    }

    @Override
    public Field<Long> field8() {
        return NormalMedication.NORMAL_MEDICATION.USAGE_UNIT;
    }

    @Override
    public Field<BigDecimal> field9() {
        return NormalMedication.NORMAL_MEDICATION.SETTLEMENT_PRICE;
    }

    @Override
    public Field<BigDecimal> field10() {
        return NormalMedication.NORMAL_MEDICATION.SELL_PRICE;
    }

    @Override
    public Field<String> field11() {
        return NormalMedication.NORMAL_MEDICATION.REMARK;
    }

    @Override
    public Field<Long> field12() {
        return NormalMedication.NORMAL_MEDICATION.CREATED_USER_ID;
    }

    @Override
    public Field<Long> field13() {
        return NormalMedication.NORMAL_MEDICATION.UPDATED_USER_ID;
    }

    @Override
    public Field<String> field14() {
        return NormalMedication.NORMAL_MEDICATION.CREATED_USER;
    }

    @Override
    public Field<String> field15() {
        return NormalMedication.NORMAL_MEDICATION.UPDATED_USER;
    }

    @Override
    public Field<LocalDateTime> field16() {
        return NormalMedication.NORMAL_MEDICATION.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field17() {
        return NormalMedication.NORMAL_MEDICATION.UPDATED_AT;
    }

    @Override
    public Field<Integer> field18() {
        return NormalMedication.NORMAL_MEDICATION.STATUS;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public Long component3() {
        return getVersion();
    }

    @Override
    public Long component4() {
        return getDosage();
    }

    @Override
    public Long component5() {
        return getRate();
    }

    @Override
    public Long component6() {
        return getProcessingMethods();
    }

    @Override
    public Long component7() {
        return getUsage();
    }

    @Override
    public Long component8() {
        return getUsageUnit();
    }

    @Override
    public BigDecimal component9() {
        return getSettlementPrice();
    }

    @Override
    public BigDecimal component10() {
        return getSellPrice();
    }

    @Override
    public String component11() {
        return getRemark();
    }

    @Override
    public Long component12() {
        return getCreatedUserId();
    }

    @Override
    public Long component13() {
        return getUpdatedUserId();
    }

    @Override
    public String component14() {
        return getCreatedUser();
    }

    @Override
    public String component15() {
        return getUpdatedUser();
    }

    @Override
    public LocalDateTime component16() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component17() {
        return getUpdatedAt();
    }

    @Override
    public Integer component18() {
        return getStatus();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public Long value3() {
        return getVersion();
    }

    @Override
    public Long value4() {
        return getDosage();
    }

    @Override
    public Long value5() {
        return getRate();
    }

    @Override
    public Long value6() {
        return getProcessingMethods();
    }

    @Override
    public Long value7() {
        return getUsage();
    }

    @Override
    public Long value8() {
        return getUsageUnit();
    }

    @Override
    public BigDecimal value9() {
        return getSettlementPrice();
    }

    @Override
    public BigDecimal value10() {
        return getSellPrice();
    }

    @Override
    public String value11() {
        return getRemark();
    }

    @Override
    public Long value12() {
        return getCreatedUserId();
    }

    @Override
    public Long value13() {
        return getUpdatedUserId();
    }

    @Override
    public String value14() {
        return getCreatedUser();
    }

    @Override
    public String value15() {
        return getUpdatedUser();
    }

    @Override
    public LocalDateTime value16() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value17() {
        return getUpdatedAt();
    }

    @Override
    public Integer value18() {
        return getStatus();
    }

    @Override
    public NormalMedicationRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public NormalMedicationRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public NormalMedicationRecord value3(Long value) {
        setVersion(value);
        return this;
    }

    @Override
    public NormalMedicationRecord value4(Long value) {
        setDosage(value);
        return this;
    }

    @Override
    public NormalMedicationRecord value5(Long value) {
        setRate(value);
        return this;
    }

    @Override
    public NormalMedicationRecord value6(Long value) {
        setProcessingMethods(value);
        return this;
    }

    @Override
    public NormalMedicationRecord value7(Long value) {
        setUsage(value);
        return this;
    }

    @Override
    public NormalMedicationRecord value8(Long value) {
        setUsageUnit(value);
        return this;
    }

    @Override
    public NormalMedicationRecord value9(BigDecimal value) {
        setSettlementPrice(value);
        return this;
    }

    @Override
    public NormalMedicationRecord value10(BigDecimal value) {
        setSellPrice(value);
        return this;
    }

    @Override
    public NormalMedicationRecord value11(String value) {
        setRemark(value);
        return this;
    }

    @Override
    public NormalMedicationRecord value12(Long value) {
        setCreatedUserId(value);
        return this;
    }

    @Override
    public NormalMedicationRecord value13(Long value) {
        setUpdatedUserId(value);
        return this;
    }

    @Override
    public NormalMedicationRecord value14(String value) {
        setCreatedUser(value);
        return this;
    }

    @Override
    public NormalMedicationRecord value15(String value) {
        setUpdatedUser(value);
        return this;
    }

    @Override
    public NormalMedicationRecord value16(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public NormalMedicationRecord value17(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public NormalMedicationRecord value18(Integer value) {
        setStatus(value);
        return this;
    }

    @Override
    public NormalMedicationRecord values(Long value1, String value2, Long value3, Long value4, Long value5, Long value6, Long value7, Long value8, BigDecimal value9, BigDecimal value10, String value11, Long value12, Long value13, String value14, String value15, LocalDateTime value16, LocalDateTime value17, Integer value18) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NormalMedicationRecord
     */
    public NormalMedicationRecord() {
        super(NormalMedication.NORMAL_MEDICATION);
    }

    /**
     * Create a detached, initialised NormalMedicationRecord
     */
    public NormalMedicationRecord(Long id, String name, Long version, Long dosage, Long rate, Long processingMethods, Long usage, Long usageUnit, BigDecimal settlementPrice, BigDecimal sellPrice, String remark, Long createdUserId, Long updatedUserId, String createdUser, String updatedUser, LocalDateTime createdAt, LocalDateTime updatedAt, Integer status) {
        super(NormalMedication.NORMAL_MEDICATION);

        setId(id);
        setName(name);
        setVersion(version);
        setDosage(dosage);
        setRate(rate);
        setProcessingMethods(processingMethods);
        setUsage(usage);
        setUsageUnit(usageUnit);
        setSettlementPrice(settlementPrice);
        setSellPrice(sellPrice);
        setRemark(remark);
        setCreatedUserId(createdUserId);
        setUpdatedUserId(updatedUserId);
        setCreatedUser(createdUser);
        setUpdatedUser(updatedUser);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        setStatus(status);
    }

    /**
     * Create a detached, initialised NormalMedicationRecord
     */
    public NormalMedicationRecord(NormalMedicationPO value) {
        super(NormalMedication.NORMAL_MEDICATION);

        if (value != null) {
            setId(value.getId());
            setName(value.getName());
            setVersion(value.getVersion());
            setDosage(value.getDosage());
            setRate(value.getRate());
            setProcessingMethods(value.getProcessingMethods());
            setUsage(value.getUsage());
            setUsageUnit(value.getUsageUnit());
            setSettlementPrice(value.getSettlementPrice());
            setSellPrice(value.getSellPrice());
            setRemark(value.getRemark());
            setCreatedUserId(value.getCreatedUserId());
            setUpdatedUserId(value.getUpdatedUserId());
            setCreatedUser(value.getCreatedUser());
            setUpdatedUser(value.getUpdatedUser());
            setCreatedAt(value.getCreatedAt());
            setUpdatedAt(value.getUpdatedAt());
            setStatus(value.getStatus());
        }
    }
}
