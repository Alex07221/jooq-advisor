/*
 * This file is generated by jOOQ.
 */
package cn.yxtreme.jooq.jooq.tables.daos;


import cn.yxtreme.jooq.jooq.tables.Order;
import cn.yxtreme.jooq.jooq.tables.pojos.OrderPO;
import cn.yxtreme.jooq.jooq.tables.records.OrderRecord;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Collection;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * 订单表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrderDao extends DAOImpl<OrderRecord, OrderPO, Long> {

    /**
     * Create a new OrderDao without any configuration
     */
    public OrderDao() {
        super(Order.ORDER, OrderPO.class);
    }

    /**
     * Create a new OrderDao with an attached configuration
     */
    public OrderDao(Configuration configuration) {
        super(Order.ORDER, OrderPO.class, configuration);
    }

    @Override
    public Long getId(OrderPO object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderPO> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Order.ORDER.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<OrderPO> fetchById(Long... values) {
        return fetch(Order.ORDER.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public OrderPO fetchOneById(Long value) {
        return fetchOne(Order.ORDER.ID, value);
    }

    /**
     * Fetch records that have <code>order_no BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderPO> fetchRangeOfOrderNo(String lowerInclusive, String upperInclusive) {
        return fetchRange(Order.ORDER.ORDER_NO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>order_no IN (values)</code>
     */
    public List<OrderPO> fetchByOrderNo(String... values) {
        return fetch(Order.ORDER.ORDER_NO, values);
    }

    /**
     * Fetch records that have <code>created_user BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderPO> fetchRangeOfCreatedUser(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Order.ORDER.CREATED_USER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_user IN (values)</code>
     */
    public List<OrderPO> fetchByCreatedUser(Long... values) {
        return fetch(Order.ORDER.CREATED_USER, values);
    }

    /**
     * Fetch records that have <code>updated_user BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderPO> fetchRangeOfUpdatedUser(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Order.ORDER.UPDATED_USER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_user IN (values)</code>
     */
    public List<OrderPO> fetchByUpdatedUser(Long... values) {
        return fetch(Order.ORDER.UPDATED_USER, values);
    }

    /**
     * Fetch records that have <code>created_time BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderPO> fetchRangeOfCreatedTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Order.ORDER.CREATED_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_time IN (values)</code>
     */
    public List<OrderPO> fetchByCreatedTime(LocalDateTime... values) {
        return fetch(Order.ORDER.CREATED_TIME, values);
    }

    /**
     * Fetch records that have <code>updated_time BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderPO> fetchRangeOfUpdatedTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Order.ORDER.UPDATED_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_time IN (values)</code>
     */
    public List<OrderPO> fetchByUpdatedTime(LocalDateTime... values) {
        return fetch(Order.ORDER.UPDATED_TIME, values);
    }

    /**
     * Fetch records that have <code>order_status BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderPO> fetchRangeOfOrderStatus(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Order.ORDER.ORDER_STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>order_status IN (values)</code>
     */
    public List<OrderPO> fetchByOrderStatus(Integer... values) {
        return fetch(Order.ORDER.ORDER_STATUS, values);
    }

    /**
     * Fetch records that have <code>dd_order_no BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderPO> fetchRangeOfDdOrderNo(String lowerInclusive, String upperInclusive) {
        return fetchRange(Order.ORDER.DD_ORDER_NO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>dd_order_no IN (values)</code>
     */
    public List<OrderPO> fetchByDdOrderNo(String... values) {
        return fetch(Order.ORDER.DD_ORDER_NO, values);
    }

    /**
     * Fetch records that have <code>total_price BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderPO> fetchRangeOfTotalPrice(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Order.ORDER.TOTAL_PRICE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>total_price IN (values)</code>
     */
    public List<OrderPO> fetchByTotalPrice(Long... values) {
        return fetch(Order.ORDER.TOTAL_PRICE, values);
    }

    /**
     * Fetch records that have <code>total_pay BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderPO> fetchRangeOfTotalPay(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Order.ORDER.TOTAL_PAY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>total_pay IN (values)</code>
     */
    public List<OrderPO> fetchByTotalPay(Long... values) {
        return fetch(Order.ORDER.TOTAL_PAY, values);
    }

    /**
     * Fetch records that have <code>deduction_ammount BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<OrderPO> fetchRangeOfDeductionAmmount(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Order.ORDER.DEDUCTION_AMMOUNT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>deduction_ammount IN (values)</code>
     */
    public List<OrderPO> fetchByDeductionAmmount(Long... values) {
        return fetch(Order.ORDER.DEDUCTION_AMMOUNT, values);
    }

    /**
     * Fetch records that have <code>deliver_pay BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderPO> fetchRangeOfDeliverPay(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Order.ORDER.DELIVER_PAY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>deliver_pay IN (values)</code>
     */
    public List<OrderPO> fetchByDeliverPay(Long... values) {
        return fetch(Order.ORDER.DELIVER_PAY, values);
    }

    /**
     * Fetch records that have <code>pay_time BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderPO> fetchRangeOfPayTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Order.ORDER.PAY_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>pay_time IN (values)</code>
     */
    public List<OrderPO> fetchByPayTime(LocalDateTime... values) {
        return fetch(Order.ORDER.PAY_TIME, values);
    }

    /**
     * Fetch records that have <code>init_time BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderPO> fetchRangeOfInitTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Order.ORDER.INIT_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>init_time IN (values)</code>
     */
    public List<OrderPO> fetchByInitTime(LocalDateTime... values) {
        return fetch(Order.ORDER.INIT_TIME, values);
    }

    /**
     * Fetch records that have <code>commit_time BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderPO> fetchRangeOfCommitTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Order.ORDER.COMMIT_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>commit_time IN (values)</code>
     */
    public List<OrderPO> fetchByCommitTime(LocalDateTime... values) {
        return fetch(Order.ORDER.COMMIT_TIME, values);
    }

    /**
     * Fetch records that have <code>cancel_time BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderPO> fetchRangeOfCancelTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Order.ORDER.CANCEL_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>cancel_time IN (values)</code>
     */
    public List<OrderPO> fetchByCancelTime(LocalDateTime... values) {
        return fetch(Order.ORDER.CANCEL_TIME, values);
    }

    /**
     * Fetch records that have <code>refund_time BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderPO> fetchRangeOfRefundTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Order.ORDER.REFUND_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>refund_time IN (values)</code>
     */
    public List<OrderPO> fetchByRefundTime(LocalDateTime... values) {
        return fetch(Order.ORDER.REFUND_TIME, values);
    }

    /**
     * Fetch records that have <code>prescription BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderPO> fetchRangeOfPrescription(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(Order.ORDER.PRESCRIPTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>prescription IN (values)</code>
     */
    public List<OrderPO> fetchByPrescription(Boolean... values) {
        return fetch(Order.ORDER.PRESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>had_pay BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderPO> fetchRangeOfHadPay(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Order.ORDER.HAD_PAY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>had_pay IN (values)</code>
     */
    public List<OrderPO> fetchByHadPay(Long... values) {
        return fetch(Order.ORDER.HAD_PAY, values);
    }

    /**
     * Fetch records that have <code>mobile BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderPO> fetchRangeOfMobile(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Order.ORDER.MOBILE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>mobile IN (values)</code>
     */
    public List<OrderPO> fetchByMobile(Long... values) {
        return fetch(Order.ORDER.MOBILE, values);
    }

    /**
     * Fetch records that have <code>city BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderPO> fetchRangeOfCity(String lowerInclusive, String upperInclusive) {
        return fetchRange(Order.ORDER.CITY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>city IN (values)</code>
     */
    public List<OrderPO> fetchByCity(String... values) {
        return fetch(Order.ORDER.CITY, values);
    }

    /**
     * Fetch records that have <code>patient_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderPO> fetchRangeOfPatientId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Order.ORDER.PATIENT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>patient_id IN (values)</code>
     */
    public List<OrderPO> fetchByPatientId(Long... values) {
        return fetch(Order.ORDER.PATIENT_ID, values);
    }

    /**
     * Fetch records that have <code>leader_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderPO> fetchRangeOfLeaderId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Order.ORDER.LEADER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>leader_id IN (values)</code>
     */
    public List<OrderPO> fetchByLeaderId(Long... values) {
        return fetch(Order.ORDER.LEADER_ID, values);
    }

    /**
     * Fetch records that have <code>provider_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderPO> fetchRangeOfProviderId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Order.ORDER.PROVIDER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>provider_id IN (values)</code>
     */
    public List<OrderPO> fetchByProviderId(Long... values) {
        return fetch(Order.ORDER.PROVIDER_ID, values);
    }

    /**
     * Fetch records that have <code>latitude BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderPO> fetchRangeOfLatitude(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(Order.ORDER.LATITUDE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>latitude IN (values)</code>
     */
    public List<OrderPO> fetchByLatitude(BigDecimal... values) {
        return fetch(Order.ORDER.LATITUDE, values);
    }

    /**
     * Fetch records that have <code>longitude BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderPO> fetchRangeOfLongitude(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(Order.ORDER.LONGITUDE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>longitude IN (values)</code>
     */
    public List<OrderPO> fetchByLongitude(BigDecimal... values) {
        return fetch(Order.ORDER.LONGITUDE, values);
    }

    /**
     * Fetch records that have <code>address BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderPO> fetchRangeOfAddress(String lowerInclusive, String upperInclusive) {
        return fetchRange(Order.ORDER.ADDRESS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>address IN (values)</code>
     */
    public List<OrderPO> fetchByAddress(String... values) {
        return fetch(Order.ORDER.ADDRESS, values);
    }

    /**
     * Fetch records that have <code>right BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderPO> fetchRangeOfRight(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(Order.ORDER.RIGHT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>right IN (values)</code>
     */
    public List<OrderPO> fetchByRight(Boolean... values) {
        return fetch(Order.ORDER.RIGHT, values);
    }

    /**
     * Fetch records that have <code>doctor_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderPO> fetchRangeOfDoctorName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Order.ORDER.DOCTOR_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>doctor_name IN (values)</code>
     */
    public List<OrderPO> fetchByDoctorName(String... values) {
        return fetch(Order.ORDER.DOCTOR_NAME, values);
    }

    /**
     * Fetch records that have <code>right_use_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderPO> fetchRangeOfRightUseId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Order.ORDER.RIGHT_USE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>right_use_id IN (values)</code>
     */
    public List<OrderPO> fetchByRightUseId(Long... values) {
        return fetch(Order.ORDER.RIGHT_USE_ID, values);
    }

    /**
     * Fetch records that have <code>delivered_time BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderPO> fetchRangeOfDeliveredTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Order.ORDER.DELIVERED_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>delivered_time IN (values)</code>
     */
    public List<OrderPO> fetchByDeliveredTime(LocalDateTime... values) {
        return fetch(Order.ORDER.DELIVERED_TIME, values);
    }

    /**
     * Fetch records that have <code>right_commit BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderPO> fetchRangeOfRightCommit(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(Order.ORDER.RIGHT_COMMIT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>right_commit IN (values)</code>
     */
    public List<OrderPO> fetchByRightCommit(Boolean... values) {
        return fetch(Order.ORDER.RIGHT_COMMIT, values);
    }

    /**
     * Fetch records that have <code>rights_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderPO> fetchRangeOfRightsId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Order.ORDER.RIGHTS_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>rights_id IN (values)</code>
     */
    public List<OrderPO> fetchByRightsId(Long... values) {
        return fetch(Order.ORDER.RIGHTS_ID, values);
    }

    /**
     * Fetch records that have <code>shop_type BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderPO> fetchRangeOfShopType(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Order.ORDER.SHOP_TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>shop_type IN (values)</code>
     */
    public List<OrderPO> fetchByShopType(Integer... values) {
        return fetch(Order.ORDER.SHOP_TYPE, values);
    }

    /**
     * Fetch records that have <code>logistic BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderPO> fetchRangeOfLogistic(String lowerInclusive, String upperInclusive) {
        return fetchRange(Order.ORDER.LOGISTIC, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>logistic IN (values)</code>
     */
    public List<OrderPO> fetchByLogistic(String... values) {
        return fetch(Order.ORDER.LOGISTIC, values);
    }

    /**
     * Fetch records that have <code>area BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderPO> fetchRangeOfArea(String lowerInclusive, String upperInclusive) {
        return fetchRange(Order.ORDER.AREA, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>area IN (values)</code>
     */
    public List<OrderPO> fetchByArea(String... values) {
        return fetch(Order.ORDER.AREA, values);
    }

    /**
     * Fetch records that have <code>lg_address BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderPO> fetchRangeOfLgAddress(String lowerInclusive, String upperInclusive) {
        return fetchRange(Order.ORDER.LG_ADDRESS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>lg_address IN (values)</code>
     */
    public List<OrderPO> fetchByLgAddress(String... values) {
        return fetch(Order.ORDER.LG_ADDRESS, values);
    }

    /**
     * Fetch records that have <code>lg_phone BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderPO> fetchRangeOfLgPhone(String lowerInclusive, String upperInclusive) {
        return fetchRange(Order.ORDER.LG_PHONE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>lg_phone IN (values)</code>
     */
    public List<OrderPO> fetchByLgPhone(String... values) {
        return fetch(Order.ORDER.LG_PHONE, values);
    }

    /**
     * Fetch records that have <code>lg_province BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderPO> fetchRangeOfLgProvince(String lowerInclusive, String upperInclusive) {
        return fetchRange(Order.ORDER.LG_PROVINCE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>lg_province IN (values)</code>
     */
    public List<OrderPO> fetchByLgProvince(String... values) {
        return fetch(Order.ORDER.LG_PROVINCE, values);
    }

    /**
     * Fetch records that have <code>lg_city BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderPO> fetchRangeOfLgCity(String lowerInclusive, String upperInclusive) {
        return fetchRange(Order.ORDER.LG_CITY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>lg_city IN (values)</code>
     */
    public List<OrderPO> fetchByLgCity(String... values) {
        return fetch(Order.ORDER.LG_CITY, values);
    }

    /**
     * Fetch records that have <code>lg_area BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderPO> fetchRangeOfLgArea(String lowerInclusive, String upperInclusive) {
        return fetchRange(Order.ORDER.LG_AREA, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>lg_area IN (values)</code>
     */
    public List<OrderPO> fetchByLgArea(String... values) {
        return fetch(Order.ORDER.LG_AREA, values);
    }

    /**
     * Fetch records that have <code>lg_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderPO> fetchRangeOfLgName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Order.ORDER.LG_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>lg_name IN (values)</code>
     */
    public List<OrderPO> fetchByLgName(String... values) {
        return fetch(Order.ORDER.LG_NAME, values);
    }

    /**
     * Fetch records that have <code>abandoned_reason BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<OrderPO> fetchRangeOfAbandonedReason(String lowerInclusive, String upperInclusive) {
        return fetchRange(Order.ORDER.ABANDONED_REASON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>abandoned_reason IN (values)</code>
     */
    public List<OrderPO> fetchByAbandonedReason(String... values) {
        return fetch(Order.ORDER.ABANDONED_REASON, values);
    }
        public List<OrderPO> fetchById(Collection<Long> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.Order.ORDER.ID, value.toArray(new Long[value.size()]));
        }
        public List<OrderPO> fetchByOrderNo(Collection<String> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.Order.ORDER.ORDER_NO, value.toArray(new String[value.size()]));
        }
        public List<OrderPO> fetchByCreatedUser(Collection<Long> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.Order.ORDER.CREATED_USER, value.toArray(new Long[value.size()]));
        }
        public List<OrderPO> fetchByUpdatedUser(Collection<Long> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.Order.ORDER.UPDATED_USER, value.toArray(new Long[value.size()]));
        }
        public List<OrderPO> fetchByCreatedTime(Collection<LocalDateTime> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.Order.ORDER.CREATED_TIME, value.toArray(new LocalDateTime[value.size()]));
        }
        public List<OrderPO> fetchByUpdatedTime(Collection<LocalDateTime> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.Order.ORDER.UPDATED_TIME, value.toArray(new LocalDateTime[value.size()]));
        }
        public List<OrderPO> fetchByOrderStatus(Collection<Integer> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.Order.ORDER.ORDER_STATUS, value.toArray(new Integer[value.size()]));
        }
        public List<OrderPO> fetchByDdOrderNo(Collection<String> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.Order.ORDER.DD_ORDER_NO, value.toArray(new String[value.size()]));
        }
        public List<OrderPO> fetchByTotalPrice(Collection<Long> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.Order.ORDER.TOTAL_PRICE, value.toArray(new Long[value.size()]));
        }
        public List<OrderPO> fetchByTotalPay(Collection<Long> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.Order.ORDER.TOTAL_PAY, value.toArray(new Long[value.size()]));
        }
        public List<OrderPO> fetchByDeductionAmmount(Collection<Long> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.Order.ORDER.DEDUCTION_AMMOUNT, value.toArray(new Long[value.size()]));
        }
        public List<OrderPO> fetchByDeliverPay(Collection<Long> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.Order.ORDER.DELIVER_PAY, value.toArray(new Long[value.size()]));
        }
        public List<OrderPO> fetchByPayTime(Collection<LocalDateTime> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.Order.ORDER.PAY_TIME, value.toArray(new LocalDateTime[value.size()]));
        }
        public List<OrderPO> fetchByInitTime(Collection<LocalDateTime> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.Order.ORDER.INIT_TIME, value.toArray(new LocalDateTime[value.size()]));
        }
        public List<OrderPO> fetchByCommitTime(Collection<LocalDateTime> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.Order.ORDER.COMMIT_TIME, value.toArray(new LocalDateTime[value.size()]));
        }
        public List<OrderPO> fetchByCancelTime(Collection<LocalDateTime> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.Order.ORDER.CANCEL_TIME, value.toArray(new LocalDateTime[value.size()]));
        }
        public List<OrderPO> fetchByRefundTime(Collection<LocalDateTime> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.Order.ORDER.REFUND_TIME, value.toArray(new LocalDateTime[value.size()]));
        }
        public List<OrderPO> fetchByPrescription(Collection<Boolean> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.Order.ORDER.PRESCRIPTION, value.toArray(new Boolean[value.size()]));
        }
        public List<OrderPO> fetchByHadPay(Collection<Long> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.Order.ORDER.HAD_PAY, value.toArray(new Long[value.size()]));
        }
        public List<OrderPO> fetchByMobile(Collection<Long> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.Order.ORDER.MOBILE, value.toArray(new Long[value.size()]));
        }
        public List<OrderPO> fetchByCity(Collection<String> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.Order.ORDER.CITY, value.toArray(new String[value.size()]));
        }
        public List<OrderPO> fetchByPatientId(Collection<Long> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.Order.ORDER.PATIENT_ID, value.toArray(new Long[value.size()]));
        }
        public List<OrderPO> fetchByLeaderId(Collection<Long> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.Order.ORDER.LEADER_ID, value.toArray(new Long[value.size()]));
        }
        public List<OrderPO> fetchByProviderId(Collection<Long> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.Order.ORDER.PROVIDER_ID, value.toArray(new Long[value.size()]));
        }
        public List<OrderPO> fetchByLatitude(Collection<BigDecimal> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.Order.ORDER.LATITUDE, value.toArray(new BigDecimal[value.size()]));
        }
        public List<OrderPO> fetchByLongitude(Collection<BigDecimal> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.Order.ORDER.LONGITUDE, value.toArray(new BigDecimal[value.size()]));
        }
        public List<OrderPO> fetchByAddress(Collection<String> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.Order.ORDER.ADDRESS, value.toArray(new String[value.size()]));
        }
        public List<OrderPO> fetchByRight(Collection<Boolean> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.Order.ORDER.RIGHT, value.toArray(new Boolean[value.size()]));
        }
        public List<OrderPO> fetchByDoctorName(Collection<String> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.Order.ORDER.DOCTOR_NAME, value.toArray(new String[value.size()]));
        }
        public List<OrderPO> fetchByRightUseId(Collection<Long> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.Order.ORDER.RIGHT_USE_ID, value.toArray(new Long[value.size()]));
        }
        public List<OrderPO> fetchByDeliveredTime(Collection<LocalDateTime> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.Order.ORDER.DELIVERED_TIME, value.toArray(new LocalDateTime[value.size()]));
        }
        public List<OrderPO> fetchByRightCommit(Collection<Boolean> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.Order.ORDER.RIGHT_COMMIT, value.toArray(new Boolean[value.size()]));
        }
        public List<OrderPO> fetchByRightsId(Collection<Long> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.Order.ORDER.RIGHTS_ID, value.toArray(new Long[value.size()]));
        }
        public List<OrderPO> fetchByShopType(Collection<Integer> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.Order.ORDER.SHOP_TYPE, value.toArray(new Integer[value.size()]));
        }
        public List<OrderPO> fetchByLogistic(Collection<String> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.Order.ORDER.LOGISTIC, value.toArray(new String[value.size()]));
        }
        public List<OrderPO> fetchByArea(Collection<String> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.Order.ORDER.AREA, value.toArray(new String[value.size()]));
        }
        public List<OrderPO> fetchByLgAddress(Collection<String> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.Order.ORDER.LG_ADDRESS, value.toArray(new String[value.size()]));
        }
        public List<OrderPO> fetchByLgPhone(Collection<String> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.Order.ORDER.LG_PHONE, value.toArray(new String[value.size()]));
        }
        public List<OrderPO> fetchByLgProvince(Collection<String> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.Order.ORDER.LG_PROVINCE, value.toArray(new String[value.size()]));
        }
        public List<OrderPO> fetchByLgCity(Collection<String> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.Order.ORDER.LG_CITY, value.toArray(new String[value.size()]));
        }
        public List<OrderPO> fetchByLgArea(Collection<String> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.Order.ORDER.LG_AREA, value.toArray(new String[value.size()]));
        }
        public List<OrderPO> fetchByLgName(Collection<String> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.Order.ORDER.LG_NAME, value.toArray(new String[value.size()]));
        }
        public List<OrderPO> fetchByAbandonedReason(Collection<String> value) {
                return fetch(cn.yxtreme.jooq.jooq.tables.Order.ORDER.ABANDONED_REASON, value.toArray(new String[value.size()]));
        }
}
